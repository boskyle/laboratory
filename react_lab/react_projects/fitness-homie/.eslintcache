[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js":"19","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js":"20","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js":"21","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js":"22","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js":"23","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js":"24","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js":"25"},{"size":1001,"mtime":1611698530222,"results":"26","hashOfConfig":"27"},{"size":1013,"mtime":1611450937894,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607557568584,"results":"29","hashOfConfig":"27"},{"size":664,"mtime":1611698530219,"results":"30","hashOfConfig":"27"},{"size":259,"mtime":1610838531671,"results":"31","hashOfConfig":"27"},{"size":3081,"mtime":1611698530219,"results":"32","hashOfConfig":"27"},{"size":3871,"mtime":1611701060176,"results":"33","hashOfConfig":"27"},{"size":5272,"mtime":1611698530219,"results":"34","hashOfConfig":"27"},{"size":5336,"mtime":1610838531668,"results":"35","hashOfConfig":"27"},{"size":232,"mtime":1611280190931,"results":"36","hashOfConfig":"27"},{"size":18303,"mtime":1611698530222,"results":"37","hashOfConfig":"27"},{"size":356,"mtime":1611280190931,"results":"38","hashOfConfig":"27"},{"size":368,"mtime":1610838531671,"results":"39","hashOfConfig":"27"},{"size":320,"mtime":1611343149407,"results":"40","hashOfConfig":"27"},{"size":1997,"mtime":1611604994436,"results":"41","hashOfConfig":"27"},{"size":1320,"mtime":1611444711901,"results":"42","hashOfConfig":"27"},{"size":236,"mtime":1611698530222,"results":"43","hashOfConfig":"27"},{"size":860,"mtime":1611698530219,"results":"44","hashOfConfig":"27"},{"size":3666,"mtime":1611700974303,"results":"45","hashOfConfig":"27"},{"size":2022,"mtime":1611698530219,"results":"46","hashOfConfig":"27"},{"size":3849,"mtime":1611698530219,"results":"47","hashOfConfig":"27"},{"size":382,"mtime":1611450937894,"results":"48","hashOfConfig":"27"},{"size":2046,"mtime":1611698530219,"results":"49","hashOfConfig":"27"},{"size":1873,"mtime":1611701376612,"results":"50","hashOfConfig":"27"},{"size":7277,"mtime":1611701190149,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v5j2qq",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],["105","106"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["107","108"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",["109","110","111"],"import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useState,useEffect} from 'react';\nimport {CountryDropdown, RegionDropdown} from 'react-country-region-selector';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport {loadFromLocalStorage} from '../LocalStorage';\nimport {getUsernameFromId} from './db-endpoints/db-fetch';\nimport {useHistory} from 'react-router-dom';\nimport {isUsernameExist} from '../DB/validation';\nimport {useDispatch} from 'react-redux';\nimport {authenticateUserLoggedIn} from '../redux/actions';\nimport './setup.css';\n\n\n\n\nvar basicInfo;\nvar basicInfoArray = new Array();\n\n\nlet bmr_tool_tip_string = \"An estimation on how much calories you need to consume to be able to sustain your weight.\"\n\n// component instance\nconst Setup = ()  => {\n    let registerBasicInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info.php';\n    let registerFitnessInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info-2.php';\n\n    const {register, handleSubmit, errors, reset} = useForm();\n    let history = useHistory();\n    const dispatch = useDispatch();\n\n  \n    \n    console.log(loadFromLocalStorage('isDataGiven'));\n\nlet activity = [\n    ['bmr', 1],\n    ['sedentary',1.2],\n    ['lightly-active', 1.375],\n    ['moderately-active',1.55],\n    ['very-active', 1.725],\n    ['extra-active', 1.9],\n];\n\n    \n    const [isFormSubmitted,setFlag] = useState(false);\n    const [country,setCountry] = useState('');\n    const [region, setRegion] = useState('');\n   \n    // dropdown\n    const [value,setValue]=useState('bmr');\n    const [gender,setGender]=useState('Male');\n    const [feet, setFeet]=useState('5');\n    const [inches,setInches]=useState('5');\n\n\n    \nconst selectCountry = (val) => {\n    setCountry(val);\n}\n\nconst selectRegion = (val) => {\n    setRegion(val);\n}\n\nconst dropDownChange = (e) => {\n    setValue(e.target.value);   \n}\n\nconst dropDownGender = (e) => {\n    setGender(e.target.value);   \n}\n\nconst dropDownFeet = (e) => {\n    setFeet(e.target.value);\n}\nconst dropDownInches = (e) => {\n    setInches(e.target.value);\n}\n\n\n\n/* initialize bascInfo object to fill in values:\n    username\n    firstname\n    lastname\n    country\n\n    setState of Flag to true (initially 0) to invoke a re-render of the second form.\n    reset() the react-hook-form object to clean and re-use for the second form.\n*/\nconst onSubmit = formData => {\n    \n    console.log(\"submit worked!\");\n        basicInfo = {   uid:loadFromLocalStorage(\"isLogged\").isLogged[1][0],\n                        username: formData.username,\n                        firstname: formData.firstname,\n                        lastname: formData.lastname,\n                        country: country+','+region,                   \n};\n\n    basicInfoArray.push(basicInfo);\n    setFlag(true);\n    reset();\n\n}\n\n\n// where all the submissions get posted\n\nconst onSubmit2 = async formData => {\n    console.log(\"submit 2 worked!\");\n    let height_cm = inchesToCentimeters(parseInt(feet),parseInt(inches));\n    let bmr = calculateBMR(gender,formData.weight,height_cm,formData.age);\n    let caloric_needs = calculateCalories(bmr,value);\n\n    basicInfo = {\n        bmr: bmr,\n        calories: caloric_needs,\n        weight_lbs: parseInt(formData.weight),\n        activity_level: value,\n        gender: gender,\n        height_cm: height_cm,\n        age: parseInt(formData.age)\n    }\n    basicInfoArray.push(basicInfo);\n    console.log(basicInfoArray);\n\n    await fetch (registerBasicInfoApi, {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'content-type':'application/json'\n        },\n        body: JSON.stringify(basicInfoArray[0])\n    }).then(response => response.text())\n        .then(response => console.log(\"SUCCESS\"))\n            .catch(error => console.log(error));\n\n\n    \n    await fetch (registerFitnessInfoApi, {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            uid: basicInfoArray[0].uid,\n            age: basicInfoArray[1].age,\n            gender: basicInfoArray[1].gender,\n            height: basicInfoArray[1].height_cm,\n            weight: basicInfoArray[1].weight_lbs,\n            activity_level: basicInfoArray[1].activity_level,\n            bmr: basicInfoArray[1].bmr,\n            calories: basicInfoArray[1].calories\n        })\n    }).then(response => response.text())\n            .then(response => console.log(\"SUCCESS\"))\n                .catch(error => console.log(error))\n\n\n    // dispatch\n    dispatch(authenticateUserLoggedIn(null,basicInfoArray[0].username))\n    // push to dashboard\n    history.push(`/${basicInfoArray[0].username}`);\n\n}\n\n    const [username_boo, setUsername] = useState(undefined);\n\n\n    useEffect (() => {\n        let isMounted = true;\n\n        if (loadFromLocalStorage('isLogged').isLogged[0] === true) {\n            setUsername(loadFromLocalStorage('isLogged').isLogged[1][1]);    \n        }\n\n        return () => {\n            isMounted = false;\n        };\n\n    },[])\n\n    // if user logged in but no username yet\n    if (loadFromLocalStorage('isLogged').isLogged[0] === true && username_boo === null) {\n        if(isFormSubmitted === false) {      \n            return (\n                <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n                            <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                                <h2 className=\"mx-auto\">Let's Get Started</h2>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Username</label>\n                                    <input name=\"username\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Username is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{4,10}$/,\n                                                message: \"Length should be: 4-10 with no special characters.\"\n                                            },\n                                            validate: isUsernameExist\n                                        })}\n                                        \n                                        />\n                                        {errors.username && <span>{errors.username.message}</span>}\n                                        {errors.username && errors.username.type === \"validate\" && (\n                                        <span>Username already exists.</span>\n                                        )}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Firstname</label>\n                                    <input name=\"firstname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"firstnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Firstname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Firstname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.firstname && <span>{errors.firstname.message}</span>}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Lastname</label>\n                                    <input name=\"lastname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"lastnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Lastname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Lastname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.lastname && <span>{errors.lastname.message}</span>}\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlFor=\"emailInput\">Location (Optional)</label><br></br>\n                                <CountryDropdown value={country}  onChange={selectCountry}className=\"countryInput mr-4\"/>\n                                <RegionDropdown country={country} value={region}  onChange={selectRegion} className=\"regionInput\"/>\n                                \n        \n                                </div>\n                                <button type=\"submit\" className=\"btn mx-auto\">Next</button>\n                            </form>\n        \n        \n                </div>      \n            )\n        } else {return (\n            <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n      \n                <form className=\"h-75 p-4 d-flex flex-column justify-content-start text-center\" onSubmit={handleSubmit(onSubmit2)} noValidate>\n                    <span>\n                    <h2 className=\"mx-auto\" style={{fontSize: \"0.80em\"}}>LETS CALCULATE YOUR CALORIC NEEDS     \n                    <FaInfoCircle  className=\"text-info ml-3\" style={{position:\"relative\",fontSize:\"0.5em\"}}\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={bmr_tool_tip_string}\n                    /></h2>              \n                    </span>\n                                                                \n                    <div className=\"form-group mx-auto\">\n                        <label htmlFor=\"ageInput\"><b>Age</b></label>\n                        <input name=\"age\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Age is required!\"\n                                            },\n                                            validate: {                                              \n                                                positive: (value) => parseInt(value, 10) > 0,\n                                                tooOld: (value) => parseInt(value, 10) < 120,\n                                            },\n                                            pattern: {\n                                                value: /^[1-9][0-9]*$/,\n                                                message: \"Incorrect age format!\"\n                                            }                                                                           \n                                        })}                                \n                                        />\n                        {errors.age && <span>{errors.age.message}</span>}\n                        {errors.age?.type === \"tooOld\" && <span>Too old.</span>}\n                        {errors.age?.type === \"positive\" && <span>You can't be 0 years old silly.</span>}\n                    \n\n                    </div>\n                <div className=\"form-group mb-0 mt-2\">\n                <label htmlFor=\"ageInput\" style={{display:\"block\"}}><b>Activity</b></label>\n                    <select value={value} onChange={dropDownChange} className=\"w-75 mx-auto\" aria-describedby=\"activityInput\">\n                         <option value={activity[0][0]}>no exercise</option>\n                         <option value={activity[1][0]}>little or no exercise, desk job</option>\n                         <option value={activity[2][0]}>light exercise/ sports 1-3 days/week</option>\n                         <option value={activity[3][0]}>moderate exercise/ sports 6-7 days/week</option>\n                         <option value={activity[4][0]}>hard exercise every day, or exercising 2 xs/day</option>\n                         <option value={activity[5][0]}>hard exercise 2 or more times per day, or training for marathon, or triathlon, etc.. </option>\n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"genderInput\" style={{display:\"block\"}}><b>Gender</b></label>\n                    <select value={gender} onChange={dropDownGender} className=\"w-25 mx-auto text-center\" aria-describedby=\"genderInput\">\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>          \n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"feetInput\"  className=\"mb-2\"style={{display:\"block\"}}><b>Height</b></label>\n                    <label htmlFor=\"feetInput\">Feet</label>\n                    <select value={feet} onChange={dropDownFeet} className=\"w-25 text-center ml-2 mr-2\" aria-describedby=\"feetInput\">\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option> \n                        <option value=\"5\">5</option>   \n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>                \n                    </select>\n                    <label htmlFor=\"inchesInput\">Inches</label>\n                    <select value={inches} onChange={dropDownInches} className=\"w-25 text-center ml-2\" aria-describedby=\"feetInput\">\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option> \n                        <option value=\"2\">2</option>   \n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option> \n                        <option value=\"7\">7</option>   \n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>   \n                        <option value=\"10\">10</option>\n                        <option value=\"11\">11</option> \n                        <option value=\"12\">12</option>            \n                    </select>\n                </div>\n\n                <div className=\"form-group mb-1\">\n                <label htmlFor=\"weightInput\"><b>Weight (lbs)</b></label>\n                <input name=\"weight\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"weightInput\"\n                ref={register({\n                    required: {\n                        value: true,\n                        message: \"Weight is required\"\n                    },\n\n                    validate: {\n                        notPossible: (value) => parseInt(value, 10) <= 1000\n                    },\n                    pattern: {\n                        value: /^[1-9][0-9]*$/,\n                        message: \"Incorrect weight format!\"\n                    }   \n                    \n                })}           \n                />\n                 {errors.weight && <span>{errors.weight.message}</span>}\n                 {errors.weight?.type === \"notPossible\" && <span>Not possible.</span>}\n                </div>\n\n            <button type=\"submit\" className=\"btn mx-auto\">Done</button>\n                </form>\n                \n\n\n            </div>\n\n\n        );}\n  \n                               \n    } else {return null}\n\n  \n} \n\n\n// rule of thumb, functions that dont have state change can go out of function\nconst inchesToCentimeters = (feet,inches) => {\n\n    let multiplier_to_inches = 12;\n    let multiplier_to_cm = 2.54;\n\n    let finalCentimeters = ((multiplier_to_inches * feet) + inches) * multiplier_to_cm;\n\n    return ~~finalCentimeters;\n}\n\nconst calculateBMR = (gender,bodyweight,height,age) => {\n    if (gender === \"Male\")\n    {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5;\n        // similar to casting to int\n        return ~~rounded;\n       \n    } else if (gender === \"Female\") {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5 - 161;\n        // similar to casting to int\n        return ~~rounded;\n    }\n\n}\nconst calculateCalories = (bmr,activity) => {\n    switch (activity) {\n        case \"bmr\":\n            return ~~(bmr * 1.0);\n        case \"sedentary\":\n            return ~~(bmr * 1.2);\n        case \"lightly-active\":\n            return ~~(bmr * 1.375);\n        case \"moderately-active\":\n            return ~~(bmr * 1.55);\n        case \"very-active\":\n            return ~~(bmr * 1.725);\n        case \"extra-active\":\n            return ~~(bmr * 1.9);\n        default:\n            return ~~(bmr);\n    }\n\n}\n\n\n\n\nexport {inchesToCentimeters,calculateBMR,calculateCalories};\nexport default Setup;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js",["112","113","114"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js",["115"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {useHistory,useParams} from \"react-router-dom\";\nimport {loadFromLocalStorage} from '../LocalStorage';\nimport {LoadBasicInfo,LoadFitnessInfo,getUidFromUsername} from './db-endpoints/loadProfile';\nimport  UserProfile from './UserProfile/UserProfile';\nimport '../assets/fonts/index.css';\nimport \"./dashboard.css\";\nimport AsyncSelect from 'react-select/async';\nimport {searchBoxStyle} from './SearchBox/SearchBox';\nimport {useDispatch} from 'react-redux';\nimport {userLoggedOut} from '../redux/actions';\nimport Navigation from './Navigation/Navigation';\nimport Settings from './Settings/Settings';\n\n\n\nconst DashboardContainer = (props) => {\n    const history = useHistory();\n\n    const filterUsername =  (inputValue) => {\n     \n        return fetch ('http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/usernameAsync.php',{\n              method: 'POST',\n              body:JSON.stringify(inputValue)\n          }).then(res => res.json());\n          \n    \n          \n  }\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [selectedSearchInputValue, setSelectedSearchInputValue] = useState(null);\n  \n  const handleSearchInputChange = val => {\n      setSearchInputValue(val);\n  }\n  \n  const handleSelection = val => {\n      setSelectedSearchInputValue(val);\n  }\n\n  useEffect(() => {\n    // console.log(selectedSearchInputValue.userlogin_id);\n    if(selectedSearchInputValue !== null) {\n        localStorage.setItem(\"dash-uid\",selectedSearchInputValue.userlogin_id);\n        history.push(`/${selectedSearchInputValue.username}`);\n    }      \n},[selectedSearchInputValue])\n\n\n  \n    if (props.urlParam !== \"settings\") {\n        return  (\n            // as part of row from parent (Dashboard)            \n                    <>\n                    <div className=\"col-9 col-sm-10 col-md-8 p-2\">\n                        <UserProfile \n                            username={props.username}\n                            firstname={props.firstname}\n                            lastname={props.lastname}\n                            address={props.country}\n                            usernameSearched={props.urlParam}\n                            gender={props.gender}\n                            age={props.age}\n                            height={props.height}\n                            weight={props.weight}\n                            activityLevel={props.activity}\n                            calories={props.calories}\n                        />                  \n                    </div>\n                    <div className=\"col-sm-2 col-md-2 d-none d-md-block text-center p-2\">\n                          \n                        <div className=\"d-flex flex-column align-items-center\" style={{width:\"100%\",height:\"100%\"}}>\n                            <AsyncSelect className=\"w-100 mt-3\" \n                            cacheOptions    \n                            placeholder=\"Discover..\"                     \n                            loadingMessage={() => 'searching...'}\n                            noOptionsMessage={() => 'doesnt exist'} \n                            loadOptions={filterUsername}              \n                            value={searchInputValue}\n                            getOptionValue={e => e.username}\n                            getOptionLabel={e => e.username}\n                            onInputChange={handleSearchInputChange}\n                            onChange={handleSelection}    \n                            styles={searchBoxStyle}\n                            components={{ DropdownIndicator:()=> null,IndicatorSeparator: () => null}}\n                            />                  \n                        </div> \n                    </div>\n                    </>\n               \n              \n            \n        );\n    } else {return (\n        <div className=\"col-9 col-md-10\">\n            <Settings/>\n        </div>\n    );}\n\n}\nexport default DashboardContainer;\n\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js",["116","117","118","119","120","121","122","123","124"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js",["125","126","127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":85,"column":7,"nodeType":"135","endLine":85,"endColumn":16,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":97,"column":4,"nodeType":"138","endLine":97,"endColumn":48},{"ruleId":"139","severity":1,"message":"140","line":7,"column":9,"nodeType":"141","messageId":"142","endLine":7,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":18,"column":22,"nodeType":"145","messageId":"146","endLine":18,"endColumn":33},{"ruleId":"139","severity":1,"message":"147","line":181,"column":13,"nodeType":"141","messageId":"142","endLine":181,"endColumn":22},{"ruleId":"139","severity":1,"message":"148","line":3,"column":9,"nodeType":"141","messageId":"142","endLine":3,"endColumn":20},{"ruleId":"139","severity":1,"message":"149","line":17,"column":11,"nodeType":"141","messageId":"142","endLine":17,"endColumn":18},{"ruleId":"139","severity":1,"message":"150","line":25,"column":11,"nodeType":"141","messageId":"142","endLine":25,"endColumn":19},{"ruleId":"139","severity":1,"message":"151","line":10,"column":9,"nodeType":"141","messageId":"142","endLine":10,"endColumn":29},{"ruleId":"139","severity":1,"message":"152","line":2,"column":18,"nodeType":"141","messageId":"142","endLine":2,"endColumn":27},{"ruleId":"139","severity":1,"message":"153","line":4,"column":9,"nodeType":"141","messageId":"142","endLine":4,"endColumn":16},{"ruleId":"139","severity":1,"message":"154","line":5,"column":9,"nodeType":"141","messageId":"142","endLine":5,"endColumn":33},{"ruleId":"139","severity":1,"message":"155","line":8,"column":9,"nodeType":"141","messageId":"142","endLine":8,"endColumn":33},{"ruleId":"156","severity":1,"message":"157","line":14,"column":1,"nodeType":"158","endLine":74,"endColumn":3},{"ruleId":"139","severity":1,"message":"159","line":16,"column":11,"nodeType":"141","messageId":"142","endLine":16,"endColumn":19},{"ruleId":"139","severity":1,"message":"160","line":17,"column":11,"nodeType":"141","messageId":"142","endLine":17,"endColumn":18},{"ruleId":"139","severity":1,"message":"161","line":20,"column":12,"nodeType":"141","messageId":"142","endLine":20,"endColumn":20},{"ruleId":"139","severity":1,"message":"162","line":20,"column":21,"nodeType":"141","messageId":"142","endLine":20,"endColumn":32},{"ruleId":"139","severity":1,"message":"152","line":6,"column":18,"nodeType":"141","messageId":"142","endLine":6,"endColumn":27},{"ruleId":"139","severity":1,"message":"163","line":17,"column":44,"nodeType":"141","messageId":"142","endLine":17,"endColumn":49},{"ruleId":"139","severity":1,"message":"161","line":27,"column":12,"nodeType":"141","messageId":"142","endLine":27,"endColumn":20},{"ruleId":"139","severity":1,"message":"162","line":27,"column":21,"nodeType":"141","messageId":"142","endLine":27,"endColumn":32},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'urlParam'. Either include it or remove the dependency array.","ArrayExpression",["166"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-unused-vars","'getUsernameFromId' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'isMounted' is assigned a value but never used.","'useDispatch' is defined but never used.","'matched' is assigned a value but never used.","'selector' is assigned a value but never used.","'loadFromLocalStorage' is defined but never used.","'useEffect' is defined but never used.","'useForm' is defined but never used.","'isUsernameExistWithCheck' is defined but never used.","'authenticateUserLoggedIn' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'dispatch' is assigned a value but never used.","'history' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'setUserInfo' is assigned a value but never used.","'reset' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [dashUid, urlParam]",{"range":"169","text":"170"},[2310,2319],"[dashUid, urlParam]"]