[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Navigation.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"19"},{"size":968,"mtime":1610497369764,"results":"20","hashOfConfig":"21"},{"size":945,"mtime":1610494525217,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607557568584,"results":"23","hashOfConfig":"21"},{"size":153,"mtime":1608753010813,"results":"24","hashOfConfig":"25"},{"size":4710,"mtime":1610496829315,"results":"26","hashOfConfig":"21"},{"size":3000,"mtime":1610496829315,"results":"27","hashOfConfig":"21"},{"size":5336,"mtime":1609690817202,"results":"28","hashOfConfig":"21"},{"size":17565,"mtime":1610496829315,"results":"29","hashOfConfig":"21"},{"size":1246,"mtime":1610497406691,"results":"30","hashOfConfig":"21"},{"size":371,"mtime":1609693872190,"results":"31","hashOfConfig":"21"},{"size":1340,"mtime":1610496829315,"results":"32","hashOfConfig":"21"},{"size":411,"mtime":1609693707440,"results":"33","hashOfConfig":"21"},{"size":431,"mtime":1610496829315,"results":"34","hashOfConfig":"21"},{"size":259,"mtime":1610494525217,"results":"35","hashOfConfig":"21"},{"size":368,"mtime":1610494525217,"results":"36","hashOfConfig":"21"},{"size":287,"mtime":1610494525217,"results":"37","hashOfConfig":"21"},{"size":702,"mtime":1610494525217,"results":"38","hashOfConfig":"21"},{"size":756,"mtime":1610494525217,"results":"39","hashOfConfig":"21"},{"size":216,"mtime":1610494525217,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hv3lxb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"158qydb",{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],["87","88"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",["89","90"],"import React from 'react';\nimport './login.css';\nimport {useState,useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\nimport {useSelector,useDispatch} from 'react-redux';\nimport {authenticateUserLoggedIn} from '../redux/actions';\nimport {loadFromLocalStorage} from '../LocalStorage';\nimport {isEmailExist} from './db-endpoints/db-fetch';\n\n\n\n\n\nfunction Login() {\n    \n    const [error, setError] = useState('');\n    const history = useHistory();\n    const {handleSubmit,register,errors} = useForm();\n\n    // by default false\n    const isLogged = useSelector(state => state.isLogged);\n    const dispatch = useDispatch();\n\n    useEffect( () => {\n        const isLogged = localStorage.getItem('isLogged');\n        if (loadFromLocalStorage().isLogged[0] === true) {\n            history.push('/dashboard');\n        }\n\n    },[])\n    \n\n    const onSubmit = async formData => {\n        \n       \n        let local_url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/authenticate-user.php';\n       \n        // send email + password raw (get a resonpose (validation and authenticate user))\n        await fetch (local_url, {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: formData.email,\n                password: formData.password\n            })\n        }).then(response => response.json())\n            .then(response => {\n               \n                /*  If the response returned back is an integer that means the php file fetched  ~ returned a uid \n                    which means the user had entered the right password.\n                */           \n                if (Number.isInteger(response)) {\n\n                    history.push({\n                        pathname: '/dashboard',\n                        state: {user_id: response}\n                    })\n                    // uid dispatch send\n                    dispatch(authenticateUserLoggedIn(response));\n                   \n                   \n                   \n                  \n                   \n                } else {setError(response);}\n                \n            })\n            .catch(err => console.log(err));\n\n           \n\n            \n    }\n    \n\n    return  (\n\n        <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n\n        <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"emailInput\">Email Address</label>\n                <input name=\"email\" type=\"email\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                ref={register({\n                    // use validate prop. and pass async callback function to fetch users email + password\n                    required: {\n                        value: true,\n                        message: \"Enter your email address.\"\n                    },\n                    pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        message: \"This email doesn't exist.\",\n                    },\n                    // ajax-like validation if email exist in db\n                    validate: isEmailExist\n                })}\n                />\n                {errors.email && <span>{errors.email.message}</span>}\n                {errors.email && errors.email.type === \"validate\" && (\n                <span>This email is not registered.</span>\n                )}</div>\n                    \n\n                <div className=\"form-group mt-5\">\n                <label htmlFor=\"passwordInput\">Password</label>\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"\" aria-describedby=\"passwordInput\"\n                    ref={register({\n                        required: {\n                            value: true,\n                            message: \"Enter your password.\"\n                        }\n                       \n                    })}\n                />\n                {errors.password &&<span>{errors.password.message}</span>}\n                {<span>{error}</span>}\n                </div>\n    \n                 <button type=\"submit\" className=\"btn mx-auto\">Login</button>\n                 <Link to=\"/register\" className=\"mx-auto mt-2\" style={{textDecoration:\"none\"}}><span>Not a member ? Register here</span></Link>\n        </form>\n\n\n        </div>\n\n    );\n\n}\n\n\n\n\n\nexport default Login;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",["91","92"],"import React from 'react';\nimport './home.css';\nimport {Link} from 'react-router-dom';\nimport {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport {loadFromLocalStorage} from '../LocalStorage';\n\n// remove the underline for Link component from router-dom\nconst linkStyle = {\n    textDecoration: 'none'    \n};\n\n\n\n\n\n\n\n\nconst Home = () => {\n\n    const history = useHistory();\n\n    useEffect( () => {\n        if (loadFromLocalStorage().isLogged[0] === true) {\n            history.push('/dashboard');\n        }\n    })\n\n\n    return (\n        <div className=\"container-fluid\">\n            \n            <nav className=\"navbar navbar-expand-sm navbar-light\">\n                {/* <a className=\"navbar-brand\" href=\"#\">FM</a> */}\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#toggleMeNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n                 </button>\n              \n             <div className=\"collapse navbar-collapse justify-content-center\" id=\"toggleMeNav\">\n\n                <ul className=\"navbar-nav\">\n                    <Link to=\"/login\" style={linkStyle}>\n                        <li className=\"nav-item\">\n                        <span className=\"nav-link\">Log In</span>\n                        </li>\n                    </Link>\n                    <Link to=\"/register\" style={linkStyle}>\n                        <li className=\"nav-item\">\n                        <span className=\"nav-link\">Sign Up</span>\n                        </li>\n                    </Link>\n\n                </ul>\n\n             </div>\n            </nav>\n            <div className=\"container d-flex flex-column container-about\">\n                <h2 className=\"mx-auto mt-2 text-center\">The ultimate fitness tracker.</h2>\n                <div className=\"container container-info mt-5\">\n                    <div className=\"flex-item\"><h4>Track your calories.</h4>\n                    <p>Lorem Ipsum lorem Ips</p>\n                    </div>\n                    <div className=\"flex-item\"><h4>Easy to use meal planner.</h4> <p>Lorem Ipsum lorem Ips</p></div>\n                    <div className=\"flex-item\"><h4>See your entire progress.</h4> <p>Lorem Ipsum lorem Ips</p></div>\n                </div>\n            </div>\n        \n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#706897\" fillOpacity=\"1\" d=\"M0,32L34.3,74.7C68.6,117,137,203,206,224C274.3,245,343,203,411,197.3C480,192,549,224,617,229.3C685.7,235,754,213,823,208C891.4,203,960,213,1029,229.3C1097.1,245,1166,267,1234,234.7C1302.9,203,1371,117,1406,74.7L1440,32L1440,320L1405.7,320C1371.4,320,1303,320,1234,320C1165.7,320,1097,320,1029,320C960,320,891,320,823,320C754.3,320,686,320,617,320C548.6,320,480,320,411,320C342.9,320,274,320,206,320C137.1,320,69,320,34,320L0,320Z\"></path></svg>\n        </div>\n    );\n\n}\n\n\n\nexport default Home;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",["93","94","95","96","97","98","99","100"],"import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useState,useEffect} from 'react';\nimport {CountryDropdown, RegionDropdown, CountryRegionData} from 'react-country-region-selector';\nimport './setup.css';\nimport { FaInfoCircle } from 'react-icons/fa';\n\n\nconsole.log(localStorage.getItem('userId'));\nconsole.log(localStorage.getItem('userName'));\n\nvar basicInfo;\nvar basicInfoArray = new Array();\n\nlet bmr_tool_tip_string = \"An estimation on how much calories you need to consume to be able to sustain your weight.\"\n\n// component instance\nconst Setup = ()  => {\n    const {register, handleSubmit, errors, reset} = useForm();\n    let registerBasicInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info.php';\n\n\nlet activity = [\n    ['bmr', 1],\n    ['sedentary',1.2],\n    ['lightly-active', 1.375],\n    ['moderately-active',1.55],\n    ['very-active', 1.725],\n    ['extra-active', 1.9],\n];\n\n    \n    const [isFormSubmitted,setFlag] = useState(false);\n    const [country,setCountry] = useState('');\n    const [region, setRegion] = useState('');\n    const [foo,setFoo]=useState([]);\n    \n    // dropdown\n    const [value,setValue]=useState('bmr');\n    const [gender,setGender]=useState('Male');\n    const [feet, setFeet]=useState('5');\n    const [inches,setInches]=useState('5');\n\n\nconst setBasicInfo = () => {\n\n    if (basicInfo !== undefined) {\n        \n        basicInfoArray.push(basicInfo);\n        \n    }\n}\n\n\n    \nconst selectCountry = (val) => {\n    setCountry(val);\n}\n\nconst selectRegion = (val) => {\n    setRegion(val);\n}\n\nconst dropDownChange = (e) => {\n    setValue(e.target.value);   \n}\n\nconst dropDownGender = (e) => {\n    setGender(e.target.value);   \n}\n\nconst dropDownFeet = (e) => {\n    setFeet(e.target.value);\n}\nconst dropDownInches = (e) => {\n    setInches(e.target.value);\n}\n\nconst isUsernameExist = async (userNameInput) => {\n    let userNameListingApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/check-username-exist.php';\n    let matcher = '';\n\n    try {\n        \n        \n        await fetch(userNameListingApi, {\n            method: 'GET',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json'\n            }\n            }).then(response => response.json())\n                .then(response => {\n                    response.forEach(username => {\n                        if(username === userNameInput) {\n                            matcher = userNameInput;\n                        }\n                    })\n                })\n                .catch(err => console.log(err))\n    \n                // console.log(matcher);\n          return (userNameInput === matcher) ? false : true;\n\n\n\n\n\n    } catch (err) {console.log(\"Something went wrong with email fetch:\"+err)}\n\n}\n\n\n/* initialize bascInfo object to fill in values:\n    username\n    firstname\n    lastname\n    country\n\n    setState of Flag to true (initially 0) to invoke a re-render of the second form.\n    reset() the react-hook-form object to clean and re-use for the second form.\n*/\nconst onSubmit = formData => {\n    \n    console.log(\"submit worked!\");\n        basicInfo = {   uid:localStorage.getItem('userId'),\n                        username: formData.username,\n                        firstname: formData.firstname,\n                        lastname: formData.lastname,\n                        country: country+','+region,                   \n};\n\n    setFlag(true);\n    reset();\n\n}\n\n\nconst onSubmit2 = formData => {\n        \n\n \n    console.log(\"submit 2 worked!\");\n\n    // console.log(gender,feet,inches,value,formData.age,formData.weight);\n    // console.log(inchesToCentimeters(parseInt(feet),parseInt(inches)));\n\n    let height_cm = inchesToCentimeters(parseInt(feet),parseInt(inches));\n    let bmr = calculateBMR(gender,formData.weight,height_cm,formData.age);\n    let caloric_needs = calculateCalories(bmr,value);\n\n    basicInfo = {\n        bmr: bmr,\n        calories: caloric_needs,\n        weight_lbs: parseInt(formData.weight),\n        activity_level: value,\n        gender: gender,\n        height_cm: height_cm,\n        age: parseInt(formData.age)\n    }\n\n\n    console.log(basicInfoArray);\n\n}\n\n\n\n\nuseEffect(() => {\nsetBasicInfo();\n},[isFormSubmitted])\n\n\n\n\n\n    // if user is logged in (userId is  pushed into localStorage) BUT info is empty (info.username pushed into localStorage is non existant) then send them to this form\n    if (localStorage.getItem('userId') !== null && localStorage.getItem('userName') === null) {\n        if(isFormSubmitted === false) {      \n            return (\n                <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n                            <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                                <h2 className=\"mx-auto\">Let's Get Started</h2>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Username</label>\n                                    <input name=\"username\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Username is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{4,10}$/,\n                                                message: \"Length should be: 4-10 with no special characters.\"\n                                            },\n                                            validate: isUsernameExist\n                                        })}\n                                        \n                                        />\n                                        {errors.username && <span>{errors.username.message}</span>}\n                                        {errors.username && errors.username.type === \"validate\" && (\n                                        <span>Username already exists.</span>\n                                        )}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Firstname</label>\n                                    <input name=\"firstname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"firstnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Firstname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Firstname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.firstname && <span>{errors.firstname.message}</span>}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Lastname</label>\n                                    <input name=\"lastname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"lastnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Lastname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Lastname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.lastname && <span>{errors.lastname.message}</span>}\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlFor=\"emailInput\">Location (Optional)</label><br></br>\n                                <CountryDropdown value={country}  onChange={selectCountry}className=\"countryInput mr-4\"/>\n                                <RegionDropdown country={country} value={region}  onChange={selectRegion} className=\"regionInput\"/>\n                                \n        \n                                </div>\n                                <button type=\"submit\" className=\"btn mx-auto\">Next</button>\n                            </form>\n        \n        \n                </div>      \n            )\n        } else {return (\n            <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n      \n                <form className=\"h-75 p-4 d-flex flex-column justify-content-start text-center\" onSubmit={handleSubmit(onSubmit2)} noValidate>\n                    <span>\n                    <h2 className=\"mx-auto\" style={{fontSize: \"0.80em\"}}>LETS CALCULATE YOUR CALORIC NEEDS     \n                    <FaInfoCircle  className=\"text-info ml-3\" style={{position:\"relative\",fontSize:\"0.5em\"}}\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={bmr_tool_tip_string}\n                    /></h2>              \n                    </span>\n                                                                \n                    <div className=\"form-group mx-auto\">\n                        <label htmlFor=\"ageInput\"><b>Age</b></label>\n                        <input name=\"age\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Age is required!\"\n                                            },\n                                            validate: {                                              \n                                                positive: (value) => parseInt(value, 10) > 0,\n                                                tooOld: (value) => parseInt(value, 10) < 120,\n                                            },\n                                            pattern: {\n                                                value: /^[1-9][0-9]*$/,\n                                                message: \"Incorrect age format!\"\n                                            }                                                                           \n                                        })}                                \n                                        />\n                        {errors.age && <span>{errors.age.message}</span>}\n                        {errors.age?.type === \"tooOld\" && <span>Too old.</span>}\n                        {errors.age?.type === \"positive\" && <span>You can't be 0 years old silly.</span>}\n                    \n\n                    </div>\n                <div className=\"form-group mb-0 mt-2\">\n                <label htmlFor=\"ageInput\" style={{display:\"block\"}}><b>Activity</b></label>\n                    <select value={value} onChange={dropDownChange} className=\"w-75 mx-auto\" aria-describedby=\"activityInput\">\n                         <option value={activity[0][0]}>no exercise</option>\n                         <option value={activity[1][0]}>little or no exercise, desk job</option>\n                         <option value={activity[2][0]}>light exercise/ sports 1-3 days/week</option>\n                         <option value={activity[3][0]}>moderate exercise/ sports 6-7 days/week</option>\n                         <option value={activity[4][0]}>hard exercise every day, or exercising 2 xs/day</option>\n                         <option value={activity[5][0]}>hard exercise 2 or more times per day, or training for marathon, or triathlon, etc.. </option>\n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"genderInput\" style={{display:\"block\"}}><b>Gender</b></label>\n                    <select value={gender} onChange={dropDownGender} className=\"w-25 mx-auto text-center\" aria-describedby=\"genderInput\">\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>          \n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"feetInput\"  className=\"mb-2\"style={{display:\"block\"}}><b>Height</b></label>\n                    <label htmlFor=\"feetInput\">Feet</label>\n                    <select value={feet} onChange={dropDownFeet} className=\"w-25 text-center ml-2 mr-2\" aria-describedby=\"feetInput\">\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option> \n                        <option value=\"5\">5</option>   \n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>                \n                    </select>\n                    <label htmlFor=\"inchesInput\">Inches</label>\n                    <select value={inches} onChange={dropDownInches} className=\"w-25 text-center ml-2\" aria-describedby=\"feetInput\">\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option> \n                        <option value=\"2\">2</option>   \n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option> \n                        <option value=\"7\">7</option>   \n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>   \n                        <option value=\"10\">10</option>\n                        <option value=\"11\">11</option> \n                        <option value=\"12\">12</option>            \n                    </select>\n                </div>\n\n                <div className=\"form-group mb-1\">\n                <label htmlFor=\"weightInput\"><b>Weight (lbs)</b></label>\n                <input name=\"weight\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"weightInput\"\n                ref={register({\n                    required: {\n                        value: true,\n                        message: \"Weight is required\"\n                    },\n\n                    validate: {\n                        notPossible: (value) => parseInt(value, 10) <= 1000\n                    },\n                    pattern: {\n                        value: /^[1-9][0-9]*$/,\n                        message: \"Incorrect weight format!\"\n                    }   \n                    \n                })}           \n                />\n                 {errors.weight && <span>{errors.weight.message}</span>}\n                 {errors.weight?.type === \"notPossible\" && <span>Not possible.</span>}\n                </div>\n\n            <button type=\"submit\" className=\"btn mx-auto\">Done</button>\n                </form>\n                \n\n\n            </div>\n\n\n        );}\n  \n                               \n    }\n\n    return null;\n} \n\n\n// rule of thumb, functions that dont have state change can go out of function\nconst inchesToCentimeters = (feet,inches) => {\n\n    let multiplier_to_inches = 12;\n    let multiplier_to_cm = 2.54;\n\n    let finalCentimeters = ((multiplier_to_inches * feet) + inches) * multiplier_to_cm;\n\n    return finalCentimeters;\n}\n\nconst calculateBMR = (gender,bodyweight,height,age) => {\n    if (gender === \"Male\")\n    {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5;\n        // similar to casting to int\n        return ~~rounded;\n       \n    } else if (gender === \"Female\") {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5 - 161;\n        // similar to casting to int\n        return ~~rounded;\n    }\n\n}\nconst calculateCalories = (bmr,activity) => {\n    switch (activity) {\n        case \"bmr\":\n            return ~~(bmr * 1.0);\n        case \"sedentary\":\n            return ~~(bmr * 1.2);\n        case \"lightly-active\":\n            return ~~(bmr * 1.375);\n        case \"moderately-active\":\n            return ~~(bmr * 1.55);\n        case \"very-active\":\n            return ~~(bmr * 1.725);\n        case \"extra-active\":\n            return ~~(bmr * 1.9);\n        default:\n            return ~~(bmr);\n    }\n\n}\n\n\n\n\nexport {inchesToCentimeters,calculateBMR,calculateCalories};\nexport default Setup;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["101","102","103","104","105"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",["106","107"],"import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation';\n\n\nconst Feed = (props) => {\n\n    return (\n        <>\n        <Navigation/>\n        <div className=\"container-fluid\">\n        <h2>Coming Soon. (Last)</h2>\n        </div>\n        </>\n        );\n}\n\n\nexport default Feed;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Navigation.js",["108"],"import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport './Burger/burger.css';\nimport {Link} from 'react-router-dom';\nimport {useHistory} from 'react-router-dom';\n\nimport {useSelector,useDispatch} from 'react-redux';\nimport {userLoggedOut} from './redux/actions';\n\n// remove uid from superglobal associative araray local.storage ~~ and redirect to login page\n\n\nconst Navigation = (props) => {\n    \n    const dispatch = useDispatch();\n\n    let history = useHistory();\n    \n    const logOut = () => {\n        dispatch(userLoggedOut());\n        history.push(\"/\");\n        // localStorage.removeItem('userId');\n        // localStorage.removeItem('userName');\n        \n  \n    }\n    \n    return (\n        <div id=\"outer-container\">\n            <Menu pageWrapId={ \"page-wrap\" } outerContainerId={ \"outer-container\" } className=\"text-left\">\n                <Link to=\"/feed\" style={{textDecoration:\"none\", color:\"black\"}}><span>Feed</span></Link>\n                <Link to=\"/dashboard\" style={{textDecoration:\"none\", color:\"black\"}}><span>Profile</span></Link>\n                <Link to=\"/journal\" style={{textDecoration:\"none\", color:\"black\"}}><span>Journal</span></Link>\n                <button onClick={logOut}>Log out</button>\n            </Menu>\n                \n        </div>\n    );\n}\n\n\n\n\n\n\nexport default Navigation;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js",["109","110"],"import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation';\n\n\nconst Journal = (props) => {\n    return (\n        <>\n        <Navigation/>\n        <div className=\"container-fluid\">\n        <h2>Coming Soon. (After Profile Functionalities are done)</h2>\n        </div>\n        </>\n\n        );\n}\n\n\nexport default Journal;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js",["111"],"const userIdReducer = (state = undefined,action) => {\n\n    switch (action.type) {\n        case 'LOG_IN_SUCCESS':\n            state = action.uid;\n            return state;\n        case 'LOG_OUT_SUCCESS':\n            return undefined;\n        default:\n            return undefined;\n    }\n}","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":10,"column":9,"nodeType":"118","messageId":"119","endLine":10,"endColumn":29},{"ruleId":"116","severity":1,"message":"120","line":24,"column":11,"nodeType":"118","messageId":"119","endLine":24,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":29},{"ruleId":"116","severity":1,"message":"121","line":22,"column":11,"nodeType":"118","messageId":"119","endLine":22,"endColumn":18},{"ruleId":"116","severity":1,"message":"122","line":4,"column":42,"nodeType":"118","messageId":"119","endLine":4,"endColumn":59},{"ruleId":"123","severity":1,"message":"124","line":13,"column":22,"nodeType":"125","messageId":"126","endLine":13,"endColumn":33},{"ruleId":"116","severity":1,"message":"127","line":20,"column":12,"nodeType":"118","messageId":"119","endLine":20,"endColumn":17},{"ruleId":"116","severity":1,"message":"128","line":20,"column":18,"nodeType":"118","messageId":"119","endLine":20,"endColumn":24},{"ruleId":"116","severity":1,"message":"129","line":21,"column":9,"nodeType":"118","messageId":"119","endLine":21,"endColumn":29},{"ruleId":"130","severity":1,"message":"131","line":30,"column":3,"nodeType":"132","endLine":30,"endColumn":5,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":48,"column":12,"nodeType":"118","messageId":"119","endLine":48,"endColumn":15},{"ruleId":"116","severity":1,"message":"135","line":48,"column":16,"nodeType":"118","messageId":"119","endLine":48,"endColumn":22},{"ruleId":"116","severity":1,"message":"136","line":3,"column":10,"nodeType":"118","messageId":"119","endLine":3,"endColumn":18},{"ruleId":"116","severity":1,"message":"137","line":3,"column":20,"nodeType":"118","messageId":"119","endLine":3,"endColumn":31},{"ruleId":"116","severity":1,"message":"138","line":4,"column":9,"nodeType":"118","messageId":"119","endLine":4,"endColumn":19},{"ruleId":"116","severity":1,"message":"120","line":18,"column":11,"nodeType":"118","messageId":"119","endLine":18,"endColumn":19},{"ruleId":"130","severity":1,"message":"139","line":41,"column":7,"nodeType":"132","endLine":41,"endColumn":9,"suggestions":"140"},{"ruleId":"116","severity":1,"message":"141","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"142","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"143","line":7,"column":9,"nodeType":"118","messageId":"119","endLine":7,"endColumn":20},{"ruleId":"116","severity":1,"message":"141","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":22},{"ruleId":"116","severity":1,"message":"142","line":3,"column":9,"nodeType":"118","messageId":"119","endLine":3,"endColumn":13},{"ruleId":"116","severity":1,"message":"144","line":1,"column":7,"nodeType":"118","messageId":"119","endLine":1,"endColumn":20},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'loadFromLocalStorage' is defined but never used.","Identifier","unusedVar","'isLogged' is assigned a value but never used.","'history' is assigned a value but never used.","'CountryRegionData' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'isNew' is assigned a value but never used.","'setNew' is assigned a value but never used.","'registerBasicInfoApi' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'location.isNew'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'foo' is assigned a value but never used.","'setFoo' is assigned a value but never used.","'Redirect' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'userInfo.user_id'. Either include it or remove the dependency array.",["148"],"'Menu' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","'userIdReducer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [location.isNew]",{"range":"153","text":"154"},"Update the dependencies array to be: [userInfo.user_id]",{"range":"155","text":"156"},[967,969],"[location.isNew]",[1085,1087],"[userInfo.user_id]"]