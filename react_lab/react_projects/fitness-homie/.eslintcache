[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Navigation.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"19"},{"size":1180,"mtime":1610477147195,"results":"20","hashOfConfig":"21"},{"size":945,"mtime":1610416571949,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607557568584,"results":"23","hashOfConfig":"21"},{"size":153,"mtime":1608753010813,"results":"24","hashOfConfig":"25"},{"size":4710,"mtime":1610476478460,"results":"26","hashOfConfig":"21"},{"size":3000,"mtime":1610476982049,"results":"27","hashOfConfig":"21"},{"size":5336,"mtime":1609690817202,"results":"28","hashOfConfig":"21"},{"size":17565,"mtime":1610231893643,"results":"29","hashOfConfig":"21"},{"size":822,"mtime":1610476346917,"results":"30","hashOfConfig":"21"},{"size":371,"mtime":1609693872190,"results":"31","hashOfConfig":"21"},{"size":1340,"mtime":1610476592330,"results":"32","hashOfConfig":"21"},{"size":411,"mtime":1609693707440,"results":"33","hashOfConfig":"21"},{"size":702,"mtime":1610416571949,"results":"34","hashOfConfig":"21"},{"size":717,"mtime":1610416571949,"results":"35","hashOfConfig":"21"},{"size":259,"mtime":1610416991465,"results":"36","hashOfConfig":"21"},{"size":368,"mtime":1610417866964,"results":"37","hashOfConfig":"21"},{"size":216,"mtime":1610416571949,"results":"38","hashOfConfig":"21"},{"size":287,"mtime":1610417693816,"results":"39","hashOfConfig":"21"},{"size":431,"mtime":1610477094668,"results":"40","hashOfConfig":"21"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hv3lxb",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"158qydb",{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],["84","85"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",["86","87","88"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",["89","90","91","92","93"],"import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useState,useEffect} from 'react';\nimport {CountryDropdown, RegionDropdown, CountryRegionData} from 'react-country-region-selector';\nimport './setup.css';\nimport { FaInfoCircle } from 'react-icons/fa';\n\n\nconsole.log(localStorage.getItem('userId'));\nconsole.log(localStorage.getItem('userName'));\n\nvar basicInfo;\nvar basicInfoArray = new Array();\n\nlet bmr_tool_tip_string = \"An estimation on how much calories you need to consume to be able to sustain your weight.\"\n\n// component instance\nconst Setup = ()  => {\n    const {register, handleSubmit, errors, reset} = useForm();\n    let registerBasicInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info.php';\n\n\nlet activity = [\n    ['bmr', 1],\n    ['sedentary',1.2],\n    ['lightly-active', 1.375],\n    ['moderately-active',1.55],\n    ['very-active', 1.725],\n    ['extra-active', 1.9],\n];\n\n    \n    const [isFormSubmitted,setFlag] = useState(false);\n    const [country,setCountry] = useState('');\n    const [region, setRegion] = useState('');\n    const [foo,setFoo]=useState([]);\n    \n    // dropdown\n    const [value,setValue]=useState('bmr');\n    const [gender,setGender]=useState('Male');\n    const [feet, setFeet]=useState('5');\n    const [inches,setInches]=useState('5');\n\n\nconst setBasicInfo = () => {\n\n    if (basicInfo !== undefined) {\n        \n        basicInfoArray.push(basicInfo);\n        \n    }\n}\n\n\n    \nconst selectCountry = (val) => {\n    setCountry(val);\n}\n\nconst selectRegion = (val) => {\n    setRegion(val);\n}\n\nconst dropDownChange = (e) => {\n    setValue(e.target.value);   \n}\n\nconst dropDownGender = (e) => {\n    setGender(e.target.value);   \n}\n\nconst dropDownFeet = (e) => {\n    setFeet(e.target.value);\n}\nconst dropDownInches = (e) => {\n    setInches(e.target.value);\n}\n\nconst isUsernameExist = async (userNameInput) => {\n    let userNameListingApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/check-username-exist.php';\n    let matcher = '';\n\n    try {\n        \n        \n        await fetch(userNameListingApi, {\n            method: 'GET',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json'\n            }\n            }).then(response => response.json())\n                .then(response => {\n                    response.forEach(username => {\n                        if(username === userNameInput) {\n                            matcher = userNameInput;\n                        }\n                    })\n                })\n                .catch(err => console.log(err))\n    \n                // console.log(matcher);\n          return (userNameInput === matcher) ? false : true;\n\n\n\n\n\n    } catch (err) {console.log(\"Something went wrong with email fetch:\"+err)}\n\n}\n\n\n/* initialize bascInfo object to fill in values:\n    username\n    firstname\n    lastname\n    country\n\n    setState of Flag to true (initially 0) to invoke a re-render of the second form.\n    reset() the react-hook-form object to clean and re-use for the second form.\n*/\nconst onSubmit = formData => {\n    \n    console.log(\"submit worked!\");\n        basicInfo = {   uid:localStorage.getItem('userId'),\n                        username: formData.username,\n                        firstname: formData.firstname,\n                        lastname: formData.lastname,\n                        country: country+','+region,                   \n};\n\n    setFlag(true);\n    reset();\n\n}\n\n\nconst onSubmit2 = formData => {\n        \n\n \n    console.log(\"submit 2 worked!\");\n\n    // console.log(gender,feet,inches,value,formData.age,formData.weight);\n    // console.log(inchesToCentimeters(parseInt(feet),parseInt(inches)));\n\n    let height_cm = inchesToCentimeters(parseInt(feet),parseInt(inches));\n    let bmr = calculateBMR(gender,formData.weight,height_cm,formData.age);\n    let caloric_needs = calculateCalories(bmr,value);\n\n    basicInfo = {\n        bmr: bmr,\n        calories: caloric_needs,\n        weight_lbs: parseInt(formData.weight),\n        activity_level: value,\n        gender: gender,\n        height_cm: height_cm,\n        age: parseInt(formData.age)\n    }\n\n\n    console.log(basicInfoArray);\n\n}\n\n\n\n\nuseEffect(() => {\nsetBasicInfo();\n},[isFormSubmitted])\n\n\n\n\n\n    // if user is logged in (userId is  pushed into localStorage) BUT info is empty (info.username pushed into localStorage is non existant) then send them to this form\n    if (localStorage.getItem('userId') !== null && localStorage.getItem('userName') === null) {\n        if(isFormSubmitted === false) {      \n            return (\n                <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n                            <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                                <h2 className=\"mx-auto\">Let's Get Started</h2>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Username</label>\n                                    <input name=\"username\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Username is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{4,10}$/,\n                                                message: \"Length should be: 4-10 with no special characters.\"\n                                            },\n                                            validate: isUsernameExist\n                                        })}\n                                        \n                                        />\n                                        {errors.username && <span>{errors.username.message}</span>}\n                                        {errors.username && errors.username.type === \"validate\" && (\n                                        <span>Username already exists.</span>\n                                        )}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Firstname</label>\n                                    <input name=\"firstname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"firstnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Firstname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Firstname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.firstname && <span>{errors.firstname.message}</span>}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Lastname</label>\n                                    <input name=\"lastname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"lastnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Lastname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Lastname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.lastname && <span>{errors.lastname.message}</span>}\n                                </div>\n                                <div className=\"form-group\">\n                                <label htmlFor=\"emailInput\">Location (Optional)</label><br></br>\n                                <CountryDropdown value={country}  onChange={selectCountry}className=\"countryInput mr-4\"/>\n                                <RegionDropdown country={country} value={region}  onChange={selectRegion} className=\"regionInput\"/>\n                                \n        \n                                </div>\n                                <button type=\"submit\" className=\"btn mx-auto\">Next</button>\n                            </form>\n        \n        \n                </div>      \n            )\n        } else {return (\n            <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n      \n                <form className=\"h-75 p-4 d-flex flex-column justify-content-start text-center\" onSubmit={handleSubmit(onSubmit2)} noValidate>\n                    <span>\n                    <h2 className=\"mx-auto\" style={{fontSize: \"0.80em\"}}>LETS CALCULATE YOUR CALORIC NEEDS     \n                    <FaInfoCircle  className=\"text-info ml-3\" style={{position:\"relative\",fontSize:\"0.5em\"}}\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={bmr_tool_tip_string}\n                    /></h2>              \n                    </span>\n                                                                \n                    <div className=\"form-group mx-auto\">\n                        <label htmlFor=\"ageInput\"><b>Age</b></label>\n                        <input name=\"age\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Age is required!\"\n                                            },\n                                            validate: {                                              \n                                                positive: (value) => parseInt(value, 10) > 0,\n                                                tooOld: (value) => parseInt(value, 10) < 120,\n                                            },\n                                            pattern: {\n                                                value: /^[1-9][0-9]*$/,\n                                                message: \"Incorrect age format!\"\n                                            }                                                                           \n                                        })}                                \n                                        />\n                        {errors.age && <span>{errors.age.message}</span>}\n                        {errors.age?.type === \"tooOld\" && <span>Too old.</span>}\n                        {errors.age?.type === \"positive\" && <span>You can't be 0 years old silly.</span>}\n                    \n\n                    </div>\n                <div className=\"form-group mb-0 mt-2\">\n                <label htmlFor=\"ageInput\" style={{display:\"block\"}}><b>Activity</b></label>\n                    <select value={value} onChange={dropDownChange} className=\"w-75 mx-auto\" aria-describedby=\"activityInput\">\n                         <option value={activity[0][0]}>no exercise</option>\n                         <option value={activity[1][0]}>little or no exercise, desk job</option>\n                         <option value={activity[2][0]}>light exercise/ sports 1-3 days/week</option>\n                         <option value={activity[3][0]}>moderate exercise/ sports 6-7 days/week</option>\n                         <option value={activity[4][0]}>hard exercise every day, or exercising 2 xs/day</option>\n                         <option value={activity[5][0]}>hard exercise 2 or more times per day, or training for marathon, or triathlon, etc.. </option>\n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"genderInput\" style={{display:\"block\"}}><b>Gender</b></label>\n                    <select value={gender} onChange={dropDownGender} className=\"w-25 mx-auto text-center\" aria-describedby=\"genderInput\">\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>          \n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"feetInput\"  className=\"mb-2\"style={{display:\"block\"}}><b>Height</b></label>\n                    <label htmlFor=\"feetInput\">Feet</label>\n                    <select value={feet} onChange={dropDownFeet} className=\"w-25 text-center ml-2 mr-2\" aria-describedby=\"feetInput\">\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option> \n                        <option value=\"5\">5</option>   \n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>                \n                    </select>\n                    <label htmlFor=\"inchesInput\">Inches</label>\n                    <select value={inches} onChange={dropDownInches} className=\"w-25 text-center ml-2\" aria-describedby=\"feetInput\">\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option> \n                        <option value=\"2\">2</option>   \n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option> \n                        <option value=\"7\">7</option>   \n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>   \n                        <option value=\"10\">10</option>\n                        <option value=\"11\">11</option> \n                        <option value=\"12\">12</option>            \n                    </select>\n                </div>\n\n                <div className=\"form-group mb-1\">\n                <label htmlFor=\"weightInput\"><b>Weight (lbs)</b></label>\n                <input name=\"weight\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"weightInput\"\n                ref={register({\n                    required: {\n                        value: true,\n                        message: \"Weight is required\"\n                    },\n\n                    validate: {\n                        notPossible: (value) => parseInt(value, 10) <= 1000\n                    },\n                    pattern: {\n                        value: /^[1-9][0-9]*$/,\n                        message: \"Incorrect weight format!\"\n                    }   \n                    \n                })}           \n                />\n                 {errors.weight && <span>{errors.weight.message}</span>}\n                 {errors.weight?.type === \"notPossible\" && <span>Not possible.</span>}\n                </div>\n\n            <button type=\"submit\" className=\"btn mx-auto\">Done</button>\n                </form>\n                \n\n\n            </div>\n\n\n        );}\n  \n                               \n    }\n\n    return null;\n} \n\n\n// rule of thumb, functions that dont have state change can go out of function\nconst inchesToCentimeters = (feet,inches) => {\n\n    let multiplier_to_inches = 12;\n    let multiplier_to_cm = 2.54;\n\n    let finalCentimeters = ((multiplier_to_inches * feet) + inches) * multiplier_to_cm;\n\n    return finalCentimeters;\n}\n\nconst calculateBMR = (gender,bodyweight,height,age) => {\n    if (gender === \"Male\")\n    {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5;\n        // similar to casting to int\n        return ~~rounded;\n       \n    } else if (gender === \"Female\") {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5 - 161;\n        // similar to casting to int\n        return ~~rounded;\n    }\n\n}\nconst calculateCalories = (bmr,activity) => {\n    switch (activity) {\n        case \"bmr\":\n            return ~~(bmr * 1.0);\n        case \"sedentary\":\n            return ~~(bmr * 1.2);\n        case \"lightly-active\":\n            return ~~(bmr * 1.375);\n        case \"moderately-active\":\n            return ~~(bmr * 1.55);\n        case \"very-active\":\n            return ~~(bmr * 1.725);\n        case \"extra-active\":\n            return ~~(bmr * 1.9);\n        default:\n            return ~~(bmr);\n    }\n\n}\n\n\n\n\nexport {inchesToCentimeters,calculateBMR,calculateCalories};\nexport default Setup;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["94","95","96","97","98","99"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",["100","101"],"import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation';\n\n\nconst Feed = (props) => {\n\n    return (\n        <>\n        <Navigation/>\n        <div className=\"container-fluid\">\n        <h2>Coming Soon. (Last)</h2>\n        </div>\n        </>\n        );\n}\n\n\nexport default Feed;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Navigation.js",["102"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Journal/Journal.js",["103","104"],"import React from 'react';\nimport {slide as Menu} from 'react-burger-menu';\nimport {Link} from 'react-router-dom';\nimport Navigation from '../Navigation';\n\n\nconst Journal = (props) => {\n    return (\n        <>\n        <Navigation/>\n        <div className=\"container-fluid\">\n        <h2>Coming Soon. (After Profile Functionalities are done)</h2>\n        </div>\n        </>\n\n        );\n}\n\n\nexport default Journal;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js",["105"],"const userIdReducer = (state = undefined,action) => {\n\n    switch (action.type) {\n        case 'LOG_IN_SUCCESS':\n            state = action.uid;\n            return state;\n        case 'LOG_OUT_SUCCESS':\n            return undefined;\n        default:\n            return undefined;\n    }\n}","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":24,"column":11,"nodeType":"112","messageId":"113","endLine":24,"endColumn":19},{"ruleId":"110","severity":1,"message":"111","line":28,"column":15,"nodeType":"112","messageId":"113","endLine":28,"endColumn":23},{"ruleId":"114","severity":1,"message":"115","line":33,"column":7,"nodeType":"116","endLine":33,"endColumn":9,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":4,"column":42,"nodeType":"112","messageId":"113","endLine":4,"endColumn":59},{"ruleId":"119","severity":1,"message":"120","line":13,"column":22,"nodeType":"121","messageId":"122","endLine":13,"endColumn":33},{"ruleId":"110","severity":1,"message":"123","line":20,"column":9,"nodeType":"112","messageId":"113","endLine":20,"endColumn":29},{"ruleId":"110","severity":1,"message":"124","line":36,"column":12,"nodeType":"112","messageId":"113","endLine":36,"endColumn":15},{"ruleId":"110","severity":1,"message":"125","line":36,"column":16,"nodeType":"112","messageId":"113","endLine":36,"endColumn":22},{"ruleId":"110","severity":1,"message":"126","line":2,"column":9,"nodeType":"112","messageId":"113","endLine":2,"endColumn":17},{"ruleId":"110","severity":1,"message":"127","line":2,"column":18,"nodeType":"112","messageId":"113","endLine":2,"endColumn":27},{"ruleId":"110","severity":1,"message":"128","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":18},{"ruleId":"110","severity":1,"message":"129","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"110","severity":1,"message":"130","line":8,"column":9,"nodeType":"112","messageId":"113","endLine":8,"endColumn":22},{"ruleId":"110","severity":1,"message":"131","line":16,"column":9,"nodeType":"112","messageId":"113","endLine":16,"endColumn":17},{"ruleId":"110","severity":1,"message":"132","line":2,"column":18,"nodeType":"112","messageId":"113","endLine":2,"endColumn":22},{"ruleId":"110","severity":1,"message":"133","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"134","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"132","line":2,"column":18,"nodeType":"112","messageId":"113","endLine":2,"endColumn":22},{"ruleId":"110","severity":1,"message":"133","line":3,"column":9,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"110","severity":1,"message":"135","line":1,"column":7,"nodeType":"112","messageId":"113","endLine":1,"endColumn":20},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'isLogged' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["138"],"'CountryRegionData' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'registerBasicInfoApi' is assigned a value but never used.","'foo' is assigned a value but never used.","'setFoo' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'LoadBasicInfo' is defined but never used.","'location' is assigned a value but never used.","'Menu' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","'userIdReducer' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},"Update the dependencies array to be: [history]",{"range":"141","text":"142"},[917,919],"[history]"]