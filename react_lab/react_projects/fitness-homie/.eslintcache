[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js":"19","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js":"20","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js":"21","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js":"22","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js":"23","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js":"24","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js":"25","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/FoodItem/FoodItem.js":"26"},{"size":1001,"mtime":1612980620150,"results":"27","hashOfConfig":"28"},{"size":908,"mtime":1612980620137,"results":"29","hashOfConfig":"28"},{"size":362,"mtime":1612980620154,"results":"30","hashOfConfig":"28"},{"size":664,"mtime":1612980620144,"results":"31","hashOfConfig":"28"},{"size":259,"mtime":1612980620154,"results":"32","hashOfConfig":"28"},{"size":3081,"mtime":1612980620144,"results":"33","hashOfConfig":"28"},{"size":4453,"mtime":1612990056509,"results":"34","hashOfConfig":"28"},{"size":5350,"mtime":1612981501633,"results":"35","hashOfConfig":"28"},{"size":5346,"mtime":1612982142279,"results":"36","hashOfConfig":"28"},{"size":232,"mtime":1612980620144,"results":"37","hashOfConfig":"28"},{"size":17775,"mtime":1612989839386,"results":"38","hashOfConfig":"28"},{"size":368,"mtime":1612980620154,"results":"39","hashOfConfig":"28"},{"size":320,"mtime":1612980620154,"results":"40","hashOfConfig":"28"},{"size":1997,"mtime":1612980620144,"results":"41","hashOfConfig":"28"},{"size":1320,"mtime":1612980620147,"results":"42","hashOfConfig":"28"},{"size":236,"mtime":1612980620154,"results":"43","hashOfConfig":"28"},{"size":860,"mtime":1612980620140,"results":"44","hashOfConfig":"28"},{"size":4252,"mtime":1612980620140,"results":"45","hashOfConfig":"28"},{"size":2329,"mtime":1612980620137,"results":"46","hashOfConfig":"28"},{"size":4631,"mtime":1612980620137,"results":"47","hashOfConfig":"28"},{"size":497,"mtime":1612980620140,"results":"48","hashOfConfig":"28"},{"size":2046,"mtime":1612980620137,"results":"49","hashOfConfig":"28"},{"size":1533,"mtime":1612980620140,"results":"50","hashOfConfig":"28"},{"size":15336,"mtime":1612990173236,"results":"51","hashOfConfig":"28"},{"size":16525,"mtime":1612989933793,"results":"52","hashOfConfig":"28"},{"size":6262,"mtime":1612980620144,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"v5j2qq",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],["110","111"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["112"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",["113"],"import React from 'react';\nimport './login.css';\nimport {useState} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router-dom';\nimport {Redirect,Link} from 'react-router-dom';\nimport {useDispatch} from 'react-redux';\nimport {authenticateUserLoggedIn} from '../redux/actions';\nimport {isEmailExist,getUsernameFromId} from './db-endpoints/db-fetch';\nimport {LoadBasicInfo} from '../Dashboard/./db-endpoints/loadProfile';\n\n\n\n\n\nfunction Login() {\n    \n    const [error, setError] = useState('');\n    const history = useHistory();\n    const {handleSubmit,register,errors} = useForm();\n\n    // by default false\n    // const isLogged = useSelector(state => state.isLogged);\n    const dispatch = useDispatch();\n\n \n    \n\n    const onSubmit = async formData => {\n        \n       \n        let local_url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/authenticate-user.php';\n        // let auth_rleative_path = \"./authenticate-user.php\";\n       \n        // send email + password raw (get a resonpose (validation and authenticate user))\n        await fetch (local_url, {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: formData.email,\n                password: formData.password\n            })\n        }).then(uid => uid.json())\n            .then(uid => {\n               \n                /*  If the response returned back is an integer that means the php file fetched  ~ returned a uid \n                    which means the user had entered the right password.\n                */           \n                if (Number.isInteger(uid)) {\n                    \n                    // added username to the redux payload along with his/her userid\n                    getUsernameFromId(uid).then (username => {\n                        dispatch(authenticateUserLoggedIn(uid,username));\n                    });\n                    // uid (response) dispatch send\n                    /*  fetch uid from the logged in user, \n                        and pass this uid as paramter to another async function t\n                        hat will return the username\n                        associated with the userid and push it to the history stack to reroute to that username\n                    */\n                     LoadBasicInfo(uid).then(response => {\n                                if (response === false) {\n                                    history.push({\n                                        pathname: \"/login/setup\",\n                                        val: false\n                                    });\n                            } else { history.replace(`/${response.username}`);}\n                           \n                     })\n\n                                         \n                } else {setError(uid);}\n                \n            })\n            .catch(err => console.log(err));\n     \n    }\n    \n\n    return  (\n\n        <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n\n        <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"emailInput\">Email Address</label>\n                <input name=\"email\" type=\"email\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                ref={register({\n                    // use validate prop. and pass async callback function to fetch users email + password\n                    required: {\n                        value: true,\n                        message: \"Enter your email address.\"\n                    },\n                    pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        message: \"This email doesn't exist.\",\n                    },\n                    // ajax-like validation if email exist in db\n                    validate: isEmailExist\n                })}\n                />\n                {errors.email && <span>{errors.email.message}</span>}\n                {errors.email && errors.email.type === \"validate\" && (\n                <span>This email is not registered.</span>\n                )}</div>\n                    \n\n                <div className=\"form-group mt-5\">\n                <label htmlFor=\"passwordInput\">Password</label>\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"\" aria-describedby=\"passwordInput\"\n                    ref={register({\n                        required: {\n                            value: true,\n                            message: \"Enter your password.\"\n                        }\n                       \n                    })}\n                />\n                {errors.password &&<span>{errors.password.message}</span>}\n                {<span>{error}</span>}\n                </div>\n    \n                 <button type=\"submit\" className=\"btn mx-auto login-btn\">LOGIN</button>\n                 <Link to=\"/register\" className=\"mx-auto reg-link\" style={{textDecoration:\"none\"}}><span>Not a member ? Register here</span></Link>\n        </form>\n\n\n        </div>\n\n    );\n\n}\n\n\n\n\n\nexport default Login;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",["114","115"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js",["116"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {getUidFromUsername} from '../db-endpoints/loadProfile';\nimport './userprofile.css';\nimport Popup from './Popup/Popup';\n\nconst UserProfile = ({userid,username,firstname,lastname,usernameSearched,gender,age,height,weight,activityLevel,calories,caloriesTarget}) => {\n\n        // console.log(loadFromLocalStorage('isLogged').isLogged[1]);\n      \n\n\n    let edit,edit2,edit3;\n   \n    const [suid,setSuid] = useState(undefined);\n\n    useEffect(() => {\n        console.log(\"userprofile mounted\");\n    },[])\n\n    useEffect(() => {\n        return () => {console.log(\"userprofile unmounted\")}\n    },[])\n\n    useEffect( () => {\n        let isMounted = true;\n        getUidFromUsername(username).then(searchedUid => {\n            if(isMounted)\n            setSuid(searchedUid);\n        },[username])\n        return () => {isMounted = false};  \n    },[username])\n \n\n            if (userid === suid)\n            {\n                edit =  <Popup identity=\"userProfile\" userId ={userid} username={username} firstname={firstname} lastname={lastname} gender={gender} age={age} height={height} weight={weight} activityLevel={activityLevel}/>\n                edit2 = <Popup identity=\"userStats\" userId ={userid} username={username} firstname={firstname} lastname={lastname} gender={gender} age={age} height={height} weight={weight} activityLevel={activityLevel} caloriesTarget={caloriesTarget}/>\n                edit3 = <Popup identity=\"userTargetCalories\" userId ={userid} username={username} firstname={firstname} lastname={lastname} gender={gender} age={age} height={height} weight={weight} activityLevel={activityLevel}/>\n            }\n            \n            // console.log(selector);\n            // console.log(\"loggedIn: \"+userid);\n            // console.log(\"current: \"+suid);\n\n \n\n\n\n        // validate that username exists\n        if(username !== \"\")\n        {\n            \n            return (\n                <div className=\"user-profile-container\">\n                    <div className=\"user-profile-item\">\n                    <h2 className=\"\">PROFILE {edit}\n                    \n                    \n                    \n                    \n                    </h2>\n                        <div>\n                        <span className=\"userName\">{username}</span>\n                        <span className=\"name\">{firstname +\" \"+lastname}</span>\n                        </div>\n                    </div>\n\n\n                    <div className=\"user-profile-item\">\n                        <h3 className=\"m-1\">JOURNAL {edit2}</h3>\n                        <div className=\"journal-items-container\">\n                            <div className=\"journal-item\"><h4>STATS</h4>\n                                <ul>\n                                    <li>gender: <span>{gender}</span></li>\n                                    <li>age: <span>{age}</span></li>\n                                    <li>height: <span>{height} cm</span></li>\n                                    <li>weight: <span>{weight} lbs</span></li>\n                                </ul>\n                            </div>\n                            <div className=\"journal-item\"><h4>PROGRESS</h4>\n                                <ul>\n                                   <li>Activity Level: <span>{activityLevel}</span></li>\n                                   <li>Daily Burn: <span>{calories} Calories</span></li>\n                                   <li>Daily Calories:<span>{caloriesTarget} Calories</span></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n                    <div className=\"user-profile-item\"><h3>WORKOUT</h3> <ul>weekly workout playlist</ul></div>      \n                </div>  \n            );\n        } else {\n            return (<div className=\"user-profile-container\">\n            <div className=\"user-profile-item\">Profile\n            <h3>@{usernameSearched} doesnt exist..</h3>\n            \n            </div>\n            <div className=\"user-profile-item\">Journal</div>\n            <div className=\"user-profile-item\">Workout</div>\n            </div>  \n            );\n        }\n\n   \n}\n\nexport default UserProfile;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js",["117","118","119","120","121","122"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/FoodItem/FoodItem.js",["123"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {loadFromLocalStorage} from '../../LocalStorage';\nimport {FaTrashAlt} from 'react-icons/fa';\nimport moment from 'moment';\n\n\n\n\nexport const FoodItem = ({loggedItems,setLoggedItems,simpleDate,setOpenFood,setCaloriesEaten}) => {\n    \n    const fetchUserFoods = async () => {\n    let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n    let displayFoodList = `http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/displayFoodlist.php?username=${username}`;\n    \n    const foodData = await fetch(displayFoodList,{\n            method: 'GET',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json',\n            }\n        });\n\n        const items = await foodData.json();\n        setFoodItems(items);\n    }\n\n     \n    const fetchUserLoggedFoods = async () => {\n\n        const calculateCalories = (lfitems) => {\n            let total = 0;\n            lfitems.map((item) => {\n                total += item.calories;\n            })\n            return total;\n        }\n       let total = calculateCalories(loggedItems);\n       setCaloriesEaten(total);\n    }\n    \n\n\n    const [foodItems, setFoodItems] = useState([]);\n  \n    useEffect(() =>{\n        fetchUserFoods();\n    },[])\n\n\n\n    const addFoodItemToLog = (e) => {\n\n\n        let timeAdded = new Date();\n        console.log(moment(timeAdded).format('HH:mm:ss'));\n        let fullTimeAdded = (simpleDate+' '+moment(timeAdded).format('HH:mm:ss'));\n        console.log (fullTimeAdded);\n\n        console.log('add food item to log clicked');\n        const addFoodItemToDatabase = async (uname,foodname,cals,carbs,protein,fat) => {\n            let url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/logfood.php';\n\n            await fetch(url,{\n                method: 'POST',\n                headers: {\n                    'accept': 'application/json',\n                    'content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: uname,\n                    loggedDateSimple: simpleDate,\n                    preciseLoggedDate: fullTimeAdded,\n                    foodname: foodname,\n                    calories: cals,\n                    carbohydrates: carbs,\n                    protein: protein,\n                    fat: fat\n                })\n            })\n        }\n\n\n        let clickedFoodItem = e.currentTarget.getAttribute('food-index');\n        let tempArray2 = loggedItems;\n        // get the length of the current logged items and append to the endpoints\n        // starts at 0, but splice iteration starts at 1 so +1, and add the clicked food item\n        // add the the front (unshift)\n        tempArray2.unshift(foodItems[clickedFoodItem]);\n        console.log(foodItems[clickedFoodItem]);\n        setLoggedItems([...tempArray2]);\n\n        let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n       \n\n            addFoodItemToDatabase(\n                username,\n                foodItems[clickedFoodItem].foodname,\n                foodItems[clickedFoodItem].calories,\n                foodItems[clickedFoodItem].carbohydrates,\n                foodItems[clickedFoodItem].protein,\n                foodItems[clickedFoodItem].fat\n                )\n        \n        \n        setOpenFood(false);\n        fetchUserLoggedFoods();\n\n    }\n\n   \n    const deleteFoodItem = (e) => {\n\n        console.log('delete food item clicked');\n        e.stopPropagation();\n        const deleteFoodFromDatabase = async (uname,arrayIndex) => {\n            let url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/deletefood.php';\n            \n                await fetch(url, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: uname,\n                        rowNumber: parseInt(arrayIndex)\n                    })\n                })\n\n                 \n        }\n\n        let tempArray = foodItems;\n\n        /*  get attribute 'food-index' which contains the cur .index (location of the clicked element)\n            and use it as a reference for deletion (splice)\n        */\n\n        /*\n        Use e.currentTarget.getAttribute('data-value'). The target property refers to the dom \n        element on which the event originated (which will be the svg element), whereas currentTarget refers to the \n        element to which the handler was attached.        \n        */\n\n        let curDeletedIndex = e.currentTarget.getAttribute('food-index');\n        // setIndex(e.currentTarget.getAttribute('food-index'));\n        tempArray.splice(curDeletedIndex,1)\n        // change the current array stored in state 'foodItems'\n        setFoodItems([...tempArray]);\n        let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n        deleteFoodFromDatabase(username,curDeletedIndex);    \n    }\n\n \n\n    let yfDeleteStyle = {\n\n        position: 'relative',\n        float: 'right',\n    };\n\n \n    if(foodItems !== undefined)\n    return ( <>\n        {foodItems.map((foodItem,index) => (\n        <div  onClick={addFoodItemToLog}  key={index} food-index={index}>\n            <ul>\n                <li>{foodItem.foodname}<FaTrashAlt className=\"ml-1 mb-1 text-danger\" style={yfDeleteStyle} onClick={deleteFoodItem}\n                food-index={index}              \n                /></li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>cals:{foodItem.calories}</li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>c: {foodItem.carbohydrates}\n                </li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>p: {foodItem.protein} </li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>f:{foodItem.fat}</li>\n            </ul>\n        </div>\n       \n        ))}\n    </>\n\n\n    );\n    \n    return null;\n\n  \n\n\n\n      \n// format   \n    //     <div>\n    //     <span>food name</span>\n    //     <ul>\n    //         <li>cals: /data/</li>\n    //         <li>c: /data/</li>\n    //         <li>p: /data/</li>\n    //         <li>f: /data/</li>\n    //     </ul>\n    //    </div>\n\n  \n}",{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":104,"column":4,"nodeType":"130","endLine":104,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":6,"column":9,"nodeType":"133","messageId":"134","endLine":6,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":13,"column":22,"nodeType":"137","messageId":"138","endLine":13,"endColumn":33},{"ruleId":"131","severity":1,"message":"139","line":27,"column":11,"nodeType":"133","messageId":"134","endLine":27,"endColumn":17},{"ruleId":"131","severity":1,"message":"140","line":39,"column":17,"nodeType":"133","messageId":"134","endLine":39,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":98,"column":32,"nodeType":"143","messageId":"144","endLine":98,"endColumn":34},{"ruleId":"145","severity":1,"message":"146","line":213,"column":22,"nodeType":"133","messageId":"147","endLine":213,"endColumn":27},{"ruleId":"128","severity":1,"message":"148","line":243,"column":3,"nodeType":"149","endLine":243,"endColumn":21,"suggestions":"150"},{"ruleId":"141","severity":1,"message":"142","line":250,"column":30,"nodeType":"143","messageId":"144","endLine":250,"endColumn":32},{"ruleId":"151","severity":1,"message":"152","line":287,"column":5,"nodeType":"153","messageId":"154","endLine":300,"endColumn":6},{"ruleId":"128","severity":1,"message":"155","line":304,"column":3,"nodeType":"149","endLine":304,"endColumn":40,"suggestions":"156"},{"ruleId":"141","severity":1,"message":"142","line":33,"column":32,"nodeType":"143","messageId":"144","endLine":33,"endColumn":34},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'rState' is assigned a value but never used.","'edit3' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'myCal' is assigned to itself.","selfAssignment","React Hook useEffect has missing dependencies: 'fetchUserLoggedFoods' and 'myDate'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setToday' needs the current value of 'myDate'.","ArrayExpression",["159"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["160"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [date, fetchUserLoggedFoods, myDate, preciseDate]",{"range":"165","text":"166"},"Update the dependencies array to be: [props.calories, props.caloriesTarget, userId]",{"range":"167","text":"168"},[7876,7894],"[date, fetchUserLoggedFoods, myDate, preciseDate]",[9469,9506],"[props.calories, props.caloriesTarget, userId]"]