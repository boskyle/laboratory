[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"9"},{"size":448,"mtime":1608753010817,"results":"10","hashOfConfig":"11"},{"size":701,"mtime":1609518800157,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607557568584,"results":"13","hashOfConfig":"11"},{"size":153,"mtime":1608753010813,"results":"14","hashOfConfig":"11"},{"size":5059,"mtime":1609523043724,"results":"15","hashOfConfig":"11"},{"size":2859,"mtime":1608753010817,"results":"16","hashOfConfig":"11"},{"size":5326,"mtime":1609523033957,"results":"17","hashOfConfig":"11"},{"size":501,"mtime":1609193187167,"results":"18","hashOfConfig":"11"},{"size":1412,"mtime":1609535761295,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"158qydb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],["41","42"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/BmrCalculator/BmrCalculator.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",["43","44","45","46"],"import React from 'react';\nimport './login.css';\nimport {useState,useEffect} from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useHistory} from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\n\n\n\n\nfunction Login() {\n    \n    const [error, setError] = useState('');\n    const history = useHistory();\n    \n    // useEffect( () => {\n    \n    // })\n    \n    /*\n        1. display error if user email does not exist.\n        2. display error if user email does not match with hashed password.\n    */\n\n    const {handleSubmit,register,watch,reset,errors} = useForm();\n\n\n    \n\n    const onSubmit = async formData => {\n        \n       \n        let local_url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/authenticate-user.php';\n       \n        // send email + password raw (get a resonpose (validation and authenticate user))\n        await fetch (local_url, {\n            method: 'POST',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                email: formData.email,\n                password: formData.password\n            })\n        }).then(response => response.json())\n            .then(response => {\n                console.log(response);\n                /*  If the response returned back is an integer that means the php file fetched  ~ returned a uid \n                    which means the user had entered the right password.\n                */           \n                if (Number.isInteger(response)) {\n                    history.push({\n                        pathname: '/dashboard',\n                        state: {user_id: response}\n                    })\n                } else {setError(response);}\n                \n            })\n            .catch(err => console.log(err));\n\n\n    }\n\n\n    return  (\n\n        <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n\n        <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n        \n            <div className=\"form-group\">\n                <label htmlFor=\"emailInput\">Email Address</label>\n                <input name=\"email\" type=\"email\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                ref={register({\n                    // use validate prop. and pass async callback function to fetch users email + password\n                    required: {\n                        value: true,\n                        message: \"Enter your email address.\"\n                    },\n                    pattern: {\n                        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                        message: \"This email doesn't exist.\",\n                    },\n                    // ajax-like validation if email exist in db\n                    validate: isEmailExist\n                })}\n                />\n                {errors.email && <span>{errors.email.message}</span>}\n                {errors.email && errors.email.type === \"validate\" && (\n                <span>This email is not registered.</span>\n                )}</div>\n                    \n\n                <div className=\"form-group mt-5\">\n                <label htmlFor=\"passwordInput\">Password</label>\n                <input name=\"password\" type=\"password\" className=\"form-control\" id=\"\" aria-describedby=\"passwordInput\"\n                    ref={register({\n                        required: {\n                            value: true,\n                            message: \"Enter your password.\"\n                        }\n                       \n                    })}\n                />\n                {errors.password &&<span>{errors.password.message}</span>}\n                {<span>{error}</span>}\n                </div>\n    \n                 <button type=\"submit\" className=\"btn mx-auto\">Login</button>\n                 <Link to=\"/register\" className=\"mx-auto mt-2\" style={{textDecoration:\"none\"}}><span>Not a member ? Register here</span></Link>\n        </form>\n\n\n        </div>\n\n    );\n\n}\n\n\n\n\nconst isEmailExist = async (emailInput) => {\n\n    let emailsListing = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Register/check-email-exist.php';\n    let matcher = '';\n    // code goes here for api fetch\n    await fetch (emailsListing,{\n        method: 'GET',\n        headers: {\n            'accept': 'application/json',\n            'content-type': 'application/json'\n        }\n    }).then (response => response.json())\n        .then(response =>{response.forEach(email => {\n            // console.log(email);\n            if(email === emailInput) {matcher = emailInput;}\n        })}).catch(err => console.log(err))\n        return (matcher === '') ? false : true;\n}\n\n\nconst authenticatePassword = async (rawPassword) => {\n\n    // post raw Password to php \n    // php proccesses it with password verify if true return (YES)\n    console.log(rawPassword);\n   \n\n}\n    \n\n\n\n\nexport default Login;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",["47","48"],"import React from 'react';\nimport './home.css';\nimport {Link} from 'react-router-dom';\n\n// remove the underline for Link component from router-dom\nconst linkStyle = {\n    textDecoration: 'none'    \n};\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                \n                <nav className=\"navbar navbar-expand-sm navbar-light\">\n                    {/* <a className=\"navbar-brand\" href=\"#\">FM</a> */}\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#toggleMeNav\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                     </button>\n                  \n                 <div className=\"collapse navbar-collapse justify-content-center\" id=\"toggleMeNav\">\n\n                    <ul className=\"navbar-nav\">\n                        <Link to=\"/login\" style={linkStyle}>\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link\">Log In</a>\n                            </li>\n                        </Link>\n                        <Link to=\"/register\" style={linkStyle}>\n                            <li className=\"nav-item\">\n                            <a className=\"nav-link\">Sign Up</a>\n                            </li>\n                        </Link>\n\n                    </ul>\n\n                 </div>\n                </nav>\n                <div className=\"container d-flex flex-column container-about\">\n                    <h2 className=\"mx-auto mt-2 text-center\">The ultimate fitness tracker.</h2>\n                    <div className=\"container container-info mt-5\">\n                        <div className=\"flex-item\"><h4>Track your calories.</h4>\n                        <p>Lorem Ipsum lorem Ips</p>\n                        </div>\n                        <div className=\"flex-item\"><h4>Easy to use meal planner.</h4> <p>Lorem Ipsum lorem Ips</p></div>\n                        <div className=\"flex-item\"><h4>See your entire progress.</h4> <p>Lorem Ipsum lorem Ips</p></div>\n                    </div>\n                </div>\n            \n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\"><path fill=\"#706897\" fill-opacity=\"1\" d=\"M0,32L34.3,74.7C68.6,117,137,203,206,224C274.3,245,343,203,411,197.3C480,192,549,224,617,229.3C685.7,235,754,213,823,208C891.4,203,960,213,1029,229.3C1097.1,245,1166,267,1234,234.7C1302.9,203,1371,117,1406,74.7L1440,32L1440,320L1405.7,320C1371.4,320,1303,320,1234,320C1165.7,320,1097,320,1029,320C960,320,891,320,823,320C754.3,320,686,320,617,320C548.6,320,480,320,411,320C342.9,320,274,320,206,320C137.1,320,69,320,34,320L0,320Z\"></path></svg>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":3,"column":18,"nodeType":"57","messageId":"58","endLine":3,"endColumn":27},{"ruleId":"55","severity":1,"message":"59","line":26,"column":34,"nodeType":"57","messageId":"58","endLine":26,"endColumn":39},{"ruleId":"55","severity":1,"message":"60","line":26,"column":40,"nodeType":"57","messageId":"58","endLine":26,"endColumn":45},{"ruleId":"55","severity":1,"message":"61","line":145,"column":7,"nodeType":"57","messageId":"58","endLine":145,"endColumn":27},{"ruleId":"62","severity":1,"message":"63","line":26,"column":29,"nodeType":"64","endLine":26,"endColumn":53},{"ruleId":"62","severity":1,"message":"63","line":31,"column":29,"nodeType":"64","endLine":31,"endColumn":53},{"ruleId":"65","severity":1,"message":"66","line":17,"column":5,"nodeType":"57","endLine":17,"endColumn":14,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"68","line":35,"column":13,"nodeType":"64","endLine":35,"endColumn":50},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'reset' is assigned a value but never used.","'authenticatePassword' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUid'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.state.user_id, uid, history] as a second argument to the useEffect Hook.",["71"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Add dependencies array: [location.state.user_id, uid, history]",{"range":"74","text":"75"},[638,638],", [location.state.user_id, uid, history]"]