[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js":"19","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js":"20","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js":"21","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js":"22","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js":"23","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js":"24","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js":"25"},{"size":1001,"mtime":1611868023729,"results":"26","hashOfConfig":"27"},{"size":908,"mtime":1611868252541,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1607557568584,"results":"29","hashOfConfig":"27"},{"size":664,"mtime":1611698530219,"results":"30","hashOfConfig":"27"},{"size":259,"mtime":1610838531671,"results":"31","hashOfConfig":"27"},{"size":3081,"mtime":1611868237605,"results":"32","hashOfConfig":"27"},{"size":4171,"mtime":1611947597235,"results":"33","hashOfConfig":"27"},{"size":5324,"mtime":1611875477272,"results":"34","hashOfConfig":"27"},{"size":5336,"mtime":1610838531668,"results":"35","hashOfConfig":"27"},{"size":232,"mtime":1611280190931,"results":"36","hashOfConfig":"27"},{"size":17539,"mtime":1611947358093,"results":"37","hashOfConfig":"27"},{"size":368,"mtime":1610838531671,"results":"38","hashOfConfig":"27"},{"size":320,"mtime":1611343149407,"results":"39","hashOfConfig":"27"},{"size":1997,"mtime":1611604994436,"results":"40","hashOfConfig":"27"},{"size":1320,"mtime":1611444711901,"results":"41","hashOfConfig":"27"},{"size":236,"mtime":1611698530222,"results":"42","hashOfConfig":"27"},{"size":860,"mtime":1611698530219,"results":"43","hashOfConfig":"27"},{"size":3835,"mtime":1611947239880,"results":"44","hashOfConfig":"27"},{"size":2329,"mtime":1611942951974,"results":"45","hashOfConfig":"27"},{"size":4466,"mtime":1611944207970,"results":"46","hashOfConfig":"27"},{"size":497,"mtime":1611947002421,"results":"47","hashOfConfig":"27"},{"size":2046,"mtime":1611698530219,"results":"48","hashOfConfig":"27"},{"size":1074,"mtime":1611947131320,"results":"49","hashOfConfig":"27"},{"size":15361,"mtime":1611947228447,"results":"50","hashOfConfig":"27"},{"size":572,"mtime":1611943511525,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"v5j2qq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],["106","107"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["108"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport {loadFromLocalStorage} from '../LocalStorage';\nimport {LoadBasicInfo,LoadFitnessInfo,getUidFromUsername} from './db-endpoints/loadProfile';\nimport '../assets/fonts/index.css';\nimport \"./dashboard.css\";\nimport Navigation from './Navigation/Navigation';\nimport DashboardContainer from './DashboardContainer';\n\nfunction Dashboard() {\n\n    // const history = useHistory();\n    const {urlParam} = useParams();\n\n\n    const [userInfo, setUserInfo] = useState({\n        username: '',\n        firstname: '',\n        lastname: '',\n        address: '',\n        country: '',\n    });\n\n    const [userFitness,setUserFitness] = useState({\n        age: '',\n        heightCm: '',\n        weightLbs: '',\n        gender: '',\n        activity: '',\n        bmr:'',\n        calories: ''\n    });\n\n    const [dashUid,setDashUid] = useState(undefined);\n    useEffect(() => {\n        let isMounted = true;\n\n        getUidFromUsername(urlParam).then(uid => {\n            if(isMounted === true) {\n                setDashUid(uid);     \n            }\n        })  \n\n        return () => {isMounted = false;}\n    },[urlParam])\n    \n   \n    useEffect( () => {\n       \n        let isMounted = true;\n        let isMounted2 = true;\n    //    comment added\n        LoadBasicInfo(dashUid).then(data => {\n            if (isMounted === true) {\n                if (data !== false) {\n                    setUserInfo({\n                        username: data.username,\n                        firstname: data.firstname,\n                        lastname: data.lastname,\n                        country: data.country\n                    })\n                }\n            }\n        })\n        \n        LoadFitnessInfo(dashUid).then(data => {\n            if (isMounted2 === true) {\n                if (data !== false) {\n                    setUserFitness({\n                        gender: data.gender,\n                        age: data.age,\n                        height: data.height_cm,\n                        weight: data.weight_lbs,\n                        activity: data.activity_level,\n                        calories: data.calories,\n                        \n                    })\n                }\n            }\n        })\n         // prevents memory leak, make sure that it is mounted first\n        return () => {isMounted = false; isMounted2 = false;} \n           \n         \n    },[dashUid])\n\n    const [loggedUid,setLoggedUid] = useState(undefined);\n\n    useEffect( () => {\n           \n        // wait to fetch logged in Object (initially undefined)\n        if (loadFromLocalStorage('isLogged').isLogged[1] !== undefined)\n        {\n        setLoggedUid(loadFromLocalStorage('isLogged').isLogged[1][0]);\n        }\n        \n},[loadFromLocalStorage('isLogged').isLogged[1]])\n\n\nuseEffect( () => {\n    console.log(\"dashboard mounted\");\n},[])\n\nuseEffect( () => {\n    return () => {console.log(\"dashboard unmounted\");}\n},[])\n\n\n\n  \n\n\n        return (\n            <div className=\"containerFluid\">\n                <div className=\"row\">\n                <div className=\"col-3 col-sm-2 col-md-2 d-flex flex-column justify-content-center\">\n                    <Navigation is_logged={loadFromLocalStorage('isLogged').isLogged[0]}/>\n                </div>\n                <DashboardContainer \n                        \n                        urlParam={urlParam}    \n                        uid={loggedUid}\n                        username={userInfo.username}\n                        firstname={userInfo.firstname}\n                        lastname={userInfo.lastname}\n                        country={userInfo.country}\n                        // fitness Information\n                        gender={userFitness.gender}\n                        age={userFitness.age}\n                        height={userFitness.height}\n                        weight={userFitness.weight}\n                        activityLevel={userFitness.activity}\n                        calories={userFitness.calories}\n                        />\n                </div>   \n            </div>\n            );\n\n\n  \n}\nexport default Dashboard;","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",["109"],"import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {useState} from 'react';\nimport { FaInfoCircle } from 'react-icons/fa';\nimport {loadFromLocalStorage} from '../LocalStorage';\nimport {useHistory} from 'react-router-dom';\nimport {isUsernameExist} from '../DB/validation';\nimport {useDispatch,useSelector} from 'react-redux';\nimport {authenticateUserLoggedIn} from '../redux/actions';\nimport './setup.css';\n\n\n\n// let foo = loadFromLocalStorage('isLogged').isLogged[0];\n// let buff = loadFromLocalStorage('isLogged').isLogged[1];\n\n\n\n\n\n\nvar basicInfo;\nvar basicInfoArray = new Array();\n\n\nlet bmr_tool_tip_string = \"An estimation on how much calories you need to consume to be able to sustain your weight.\"\n\n// component instance\nconst Setup = ()  => {\n    let registerBasicInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info.php';\n    let registerFitnessInfoApi = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Login/register-basic-info-2.php';\n\n    const {register, handleSubmit, errors, reset} = useForm();\n    let history = useHistory();\n    const dispatch = useDispatch();\n\n    const rState = useSelector(state => state.isLogged[0]);\n    console.log(rState);\n\n\n    \n\nlet activity = [\n    ['bmr', 1],\n    ['sedentary',1.2],\n    ['lightly-active', 1.375],\n    ['moderately-active',1.55],\n    ['very-active', 1.725],\n    ['extra-active', 1.9],\n];\n\n    \n    const [isFormSubmitted,setFlag] = useState(false);\n    // const [country,setCountry] = useState('');\n    // const [region, setRegion] = useState('');\n   \n    // dropdown\n    const [value,setValue]=useState('bmr');\n    const [gender,setGender]=useState('Male');\n    const [feet, setFeet]=useState('5');\n    const [inches,setInches]=useState('5');\n\n\n    \n\n\n// const selectRegion = (val) => {\n//     setRegion(val);\n// }\n\nconst dropDownChange = (e) => {\n    setValue(e.target.value);   \n}\n\nconst dropDownGender = (e) => {\n    setGender(e.target.value);   \n}\n\nconst dropDownFeet = (e) => {\n    setFeet(e.target.value);\n}\nconst dropDownInches = (e) => {\n    setInches(e.target.value);\n}\n\n\n\n/* initialize bascInfo object to fill in values:\n    username\n    firstname\n    lastname\n    country\n\n    setState of Flag to true (initially 0) to invoke a re-render of the second form.\n    reset() the react-hook-form object to clean and re-use for the second form.\n*/\nconst onSubmit = formData => {\n    \n    console.log(\"submit worked!\");\n        basicInfo = {   uid:loadFromLocalStorage(\"isLogged\").isLogged[1][0],\n                        username: formData.username,\n                        firstname: formData.firstname,\n                        lastname: formData.lastname,              \n};\n\n    basicInfoArray.push(basicInfo);\n    setFlag(true);\n    reset();\n\n}\n\n\n// where all the submissions get posted\n\nconst onSubmit2 = async formData => {\n\n    console.log(\"submit 2 worked!\");\n    let height_cm = inchesToCentimeters(parseInt(feet),parseInt(inches));\n    let bmr = calculateBMR(gender,formData.weight,height_cm,formData.age);\n    let caloric_needs = calculateCalories(bmr,value);\n\n    \n    basicInfo = {\n        bmr: bmr,\n        calories: caloric_needs,\n        weight_lbs: parseInt(formData.weight),\n        activity_level: value,\n        gender: gender,\n        height_cm: height_cm,\n        age: parseInt(formData.age)\n    }\n    basicInfoArray.push(basicInfo);\n    console.log(basicInfoArray);\n\n\n\n    await fetch (registerBasicInfoApi, {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'content-type':'application/json'\n        },\n        body: JSON.stringify(basicInfoArray[0])\n    }).then(response => response.text())\n        .then(response => console.log(\"SUCCESS\"))\n            .catch(error => console.log(error));\n\n\n    \n    await fetch (registerFitnessInfoApi, {\n        method: 'POST',\n        headers: {\n            'accept': 'application/json',\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n            uid: basicInfoArray[0].uid,\n            age: basicInfoArray[1].age,\n            gender: basicInfoArray[1].gender,\n            height: basicInfoArray[1].height_cm,\n            weight: basicInfoArray[1].weight_lbs,\n            activity_level: basicInfoArray[1].activity_level,\n            bmr: basicInfoArray[1].bmr,\n            calories: basicInfoArray[1].calories\n        })\n    }).then(response => response.text())\n            .then(response => console.log(\"SUCCESS\"))\n                .catch(error => console.log(error))\n\n\n    // dispatch\n    console.log(loadFromLocalStorage('isLogged').isLogged);\n    dispatch(authenticateUserLoggedIn(loadFromLocalStorage('isLogged').isLogged[1][0],basicInfoArray[0].username))\n    // push to dashboard\n    history.push(`/${basicInfoArray[0].username}`);\n\n\n}\n\n\n    \n    // if user logged in but no username yet\n    if (loadFromLocalStorage('isLogged').isLogged[0] === true && loadFromLocalStorage('isLogged').isLogged[1][1] === null) {\n        if(isFormSubmitted === false) {      \n            return (\n                <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n                            <form className=\"h-75 p-4 d-flex flex-column justify-content-start\" onSubmit={handleSubmit(onSubmit)} noValidate>\n                                <h2 className=\"mx-auto\">Let's Get Started</h2>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Username</label>\n                                    <input name=\"username\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Username is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{4,10}$/,\n                                                message: \"Length should be: 4-10 with no special characters.\"\n                                            },\n                                            validate: isUsernameExist\n                                        })}\n                                        \n                                        />\n                                        {errors.username && <span>{errors.username.message}</span>}\n                                        {errors.username && errors.username.type === \"validate\" && (\n                                        <span>Username already exists.</span>\n                                        )}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Firstname</label>\n                                    <input name=\"firstname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"firstnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Firstname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Firstname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.firstname && <span>{errors.firstname.message}</span>}\n                                </div>\n        \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"emailInput\">Lastname</label>\n                                    <input name=\"lastname\" type=\"text\" className=\"form-control\" id=\"\" aria-describedby=\"lastnameInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Lastname is required.\"\n                                            },\n                                            pattern: {\n                                                value: /^[a-zA-Z0-9]{2,20}$/,\n                                                message: \"Lastname length should not be more than 20.\"\n                                            },\n                                            \n                                        })}\n                                        \n                                        />\n                                        {errors.lastname && <span>{errors.lastname.message}</span>}\n                                </div>\n                               \n                                <button type=\"submit\" className=\"btn mx-auto\">Next</button>\n                            </form>\n        \n        \n                </div>      \n            )\n        } else {return (\n            <div className=\"container-fluid h-100 d-flex flex-column justify-content-center align-items-center\">\n      \n                <form className=\"h-75 p-4 d-flex flex-column justify-content-start text-center\" onSubmit={handleSubmit(onSubmit2)} noValidate>\n                    <span>\n                    <h2 className=\"mx-auto\" style={{fontSize: \"0.80em\"}}>LETS CALCULATE YOUR CALORIC NEEDS     \n                    <FaInfoCircle  className=\"text-info ml-3\" style={{position:\"relative\",fontSize:\"0.5em\"}}\n                    data-toggle=\"tooltip\" data-placement=\"bottom\" title={bmr_tool_tip_string}\n                    /></h2>              \n                    </span>\n                                                                \n                    <div className=\"form-group mx-auto\">\n                        <label htmlFor=\"ageInput\"><b>Age</b></label>\n                        <input name=\"age\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"emailInput\"\n                                        ref={register({\n                                            required: {\n                                                value: true,\n                                                message: \"Age is required!\"\n                                            },\n                                            validate: {                                              \n                                                positive: (value) => parseInt(value, 10) > 0,\n                                                tooOld: (value) => parseInt(value, 10) < 120,\n                                            },\n                                            pattern: {\n                                                value: /^[1-9][0-9]*$/,\n                                                message: \"Incorrect age format!\"\n                                            }                                                                           \n                                        })}                                \n                                        />\n                        {errors.age && <span>{errors.age.message}</span>}\n                        {errors.age?.type === \"tooOld\" && <span>Too old.</span>}\n                        {errors.age?.type === \"positive\" && <span>You can't be 0 years old silly.</span>}\n                    </div>\n                <div className=\"form-group mb-0 mt-2\">\n                <label htmlFor=\"ageInput\" style={{display:\"block\"}}><b>Activity</b></label>\n                    <select value={value} onChange={dropDownChange} className=\"w-75 mx-auto\" aria-describedby=\"activityInput\">\n                         <option value={activity[0][0]}>no exercise</option>\n                         <option value={activity[1][0]}>little or no exercise, desk job</option>\n                         <option value={activity[2][0]}>light exercise/ sports 1-3 days/week</option>\n                         <option value={activity[3][0]}>moderate exercise/ sports 6-7 days/week</option>\n                         <option value={activity[4][0]}>hard exercise every day, or exercising 2 xs/day</option>\n                         <option value={activity[5][0]}>hard exercise 2 or more times per day, or training for marathon, or triathlon, etc.. </option>\n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"genderInput\" style={{display:\"block\"}}><b>Gender</b></label>\n                    <select value={gender} onChange={dropDownGender} className=\"w-25 mx-auto text-center\" aria-describedby=\"genderInput\">\n                        <option value=\"Male\">Male</option>\n                        <option value=\"Female\">Female</option>          \n                    </select>\n                </div>\n                <div className=\"form-group mb-0 mt-2\">\n                    <label htmlFor=\"feetInput\"  className=\"mb-2\"style={{display:\"block\"}}><b>Height</b></label>\n                    <label htmlFor=\"feetInput\">Feet</label>\n                    <select value={feet} onChange={dropDownFeet} className=\"w-25 text-center ml-2 mr-2\" aria-describedby=\"feetInput\">\n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option> \n                        <option value=\"5\">5</option>   \n                        <option value=\"6\">6</option>\n                        <option value=\"7\">7</option>                \n                    </select>\n                    <label htmlFor=\"inchesInput\">Inches</label>\n                    <select value={inches} onChange={dropDownInches} className=\"w-25 text-center ml-2\" aria-describedby=\"feetInput\">\n                        <option value=\"0\">0</option>\n                        <option value=\"1\">1</option> \n                        <option value=\"2\">2</option>   \n                        <option value=\"3\">3</option>\n                        <option value=\"4\">4</option>\n                        <option value=\"5\">5</option>\n                        <option value=\"6\">6</option> \n                        <option value=\"7\">7</option>   \n                        <option value=\"8\">8</option>\n                        <option value=\"9\">9</option>   \n                        <option value=\"10\">10</option>\n                        <option value=\"11\">11</option> \n                        <option value=\"12\">12</option>            \n                    </select>\n                </div>\n\n                <div className=\"form-group mb-1\">\n                <label htmlFor=\"weightInput\"><b>Weight (lbs)</b></label>\n                <input name=\"weight\" type=\"text\" className=\"form-control w-25 text-center mx-auto\" id=\"\" aria-describedby=\"weightInput\"\n                ref={register({\n                    required: {\n                        value: true,\n                        message: \"Weight is required\"\n                    },\n\n                    validate: {\n                        notPossible: (value) => parseInt(value, 10) <= 1000\n                    },\n                    pattern: {\n                        value: /^[1-9][0-9]*$/,\n                        message: \"Incorrect weight format!\"\n                    }   \n                    \n                })}           \n                />\n                 {errors.weight && <span>{errors.weight.message}</span>}\n                 {errors.weight?.type === \"notPossible\" && <span>Not possible.</span>}\n                </div>\n\n            <button type=\"submit\" className=\"btn mx-auto\">Done</button>\n                </form>\n                \n\n\n            </div>\n\n\n        );}\n  \n                               \n    }\n    return null;\n\n  \n} \n\n\n// rule of thumb, functions that dont have state change can go out of function\nconst inchesToCentimeters = (feet,inches) => {\n\n    let multiplier_to_inches = 12;\n    let multiplier_to_cm = 2.54;\n\n    let finalCentimeters = ((multiplier_to_inches * feet) + inches) * multiplier_to_cm;\n\n    return ~~finalCentimeters;\n}\n\nconst calculateBMR = (gender,bodyweight,height,age) => {\n    if (gender === \"Male\")\n    {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5;\n        // similar to casting to int\n        return ~~rounded;\n       \n    } else if (gender === \"Female\") {\n        // metric\n        let rounded = (10 * (bodyweight/2.205)) + (6.25 * height) - (5 * age) + 5 - 161;\n        // similar to casting to int\n        return ~~rounded;\n    }\n\n}\nconst calculateCalories = (bmr,activity) => {\n    switch (activity) {\n        case \"bmr\":\n            return ~~(bmr * 1.0);\n        case \"sedentary\":\n            return ~~(bmr * 1.2);\n        case \"lightly-active\":\n            return ~~(bmr * 1.375);\n        case \"moderately-active\":\n            return ~~(bmr * 1.55);\n        case \"very-active\":\n            return ~~(bmr * 1.725);\n        case \"extra-active\":\n            return ~~(bmr * 1.9);\n        default:\n            return ~~(bmr);\n    }\n\n}\n\n\n\n\nexport {inchesToCentimeters,calculateBMR,calculateCalories};\nexport default Setup;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/userUid.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js",[],["110","111"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":98,"column":4,"nodeType":"118","endLine":98,"endColumn":48},{"ruleId":"119","severity":1,"message":"120","line":23,"column":22,"nodeType":"121","messageId":"122","endLine":23,"endColumn":33},{"ruleId":"112","replacedBy":"123"},{"ruleId":"114","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral",["125"],["126"],"no-global-assign","no-unsafe-negation"]