[{"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js":"1","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js":"2","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js":"3","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js":"4","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js":"5","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js":"6","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js":"7","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js":"8","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js":"9","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js":"10","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js":"11","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js":"12","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js":"13","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js":"14","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js":"15","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js":"16","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js":"17","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js":"18","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js":"19","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js":"20","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js":"21","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js":"22","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js":"23","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js":"24","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/FoodItem/FoodItem.js":"25"},{"size":1001,"mtime":1613674391491,"results":"26","hashOfConfig":"27"},{"size":914,"mtime":1613675282809,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1612980620154,"results":"29","hashOfConfig":"27"},{"size":664,"mtime":1612980620144,"results":"30","hashOfConfig":"27"},{"size":241,"mtime":1613673719329,"results":"31","hashOfConfig":"27"},{"size":3081,"mtime":1612980620144,"results":"32","hashOfConfig":"27"},{"size":4737,"mtime":1613761171564,"results":"33","hashOfConfig":"27"},{"size":5341,"mtime":1613768437930,"results":"34","hashOfConfig":"27"},{"size":5347,"mtime":1613765864297,"results":"35","hashOfConfig":"27"},{"size":232,"mtime":1612980620144,"results":"36","hashOfConfig":"27"},{"size":17698,"mtime":1613768425690,"results":"37","hashOfConfig":"27"},{"size":551,"mtime":1613674358998,"results":"38","hashOfConfig":"27"},{"size":1999,"mtime":1613595885102,"results":"39","hashOfConfig":"27"},{"size":1320,"mtime":1612980620147,"results":"40","hashOfConfig":"27"},{"size":385,"mtime":1613674448677,"results":"41","hashOfConfig":"27"},{"size":1719,"mtime":1613761825673,"results":"42","hashOfConfig":"27"},{"size":6268,"mtime":1613683790594,"results":"43","hashOfConfig":"27"},{"size":2329,"mtime":1612980620137,"results":"44","hashOfConfig":"27"},{"size":5875,"mtime":1613762048624,"results":"45","hashOfConfig":"27"},{"size":490,"mtime":1613590558154,"results":"46","hashOfConfig":"27"},{"size":2046,"mtime":1612980620137,"results":"47","hashOfConfig":"27"},{"size":1288,"mtime":1613683882184,"results":"48","hashOfConfig":"27"},{"size":17658,"mtime":1613768703900,"results":"49","hashOfConfig":"27"},{"size":16527,"mtime":1613768651246,"results":"50","hashOfConfig":"27"},{"size":6262,"mtime":1612980620144,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"v5j2qq",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/index.js",[],["105","106"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/App.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/reportWebVitals.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/LocalStorage.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Home/Home.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Dashboard.js",["107"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Login.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Register/Register.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Feed/Feed.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/Setup.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/reducers/isUserLoggedIn.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/db-endpoints/loadProfile.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Login/db-endpoints/db-fetch.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/redux/actions/index.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/SearchBox/SearchBox.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/UserProfile.js",["108"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {getUidFromUsername} from '../db-endpoints/loadProfile';\nimport './userprofile.css';\nimport Popup from './Popup/Popup';\nimport defaultPicture from '../../assets//images/defaulProfilePicture.png';\n\n\n\n\n\n\nconst UserProfile = ({userid,username,firstname,lastname,profile_picture,usernameSearched,gender,age,height,weight,activityLevel,calories,caloriesTarget,setUserInfo}) => {\n\n        // console.log(loadFromLocalStorage('isLogged').isLogged[1]);\n      \n   \n \n\n    let edit,edit2;\n\n    // const profilePictureImg = `http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/assets/user_assets/${username}/images/${username}.jpeg`;\n    const [picture,setPicture] = useState(defaultPicture);\n\n\n\n    const netLostGainCalories = (burning,consuming,display) => {\n\n        let caloriesPerPound = 3500;\n\n        switch(display) {\n            case 'daily':\n            if (Math.sign(burning - consuming) === 1) {\n                return   \"Loosing: \"+Math.round( (((burning - consuming) / caloriesPerPound)) * 1e2 ) / 1e2+\" lbs per day.\";\n            }\n            else if (Math.sign(burning-consuming) === -1) {\n                return   \"Gaining: \"+Math.round( Math.abs(((burning - consuming) / caloriesPerPound)) * 1e2 ) / 1e2+\" lbs per day.\";           \n            }\n            else {return \"not loosing/gaining  weight.\"}\n            case 'weekly':\n\n            if (Math.sign(burning - consuming) === 1) {\n                return  \"Loosing: \"+Math.round( (((burning - consuming) / caloriesPerPound) * 7) * 1e2 ) / 1e2+\" lbs per week.\";\n            }\n            else if (Math.sign(burning-consuming) === -1) {\n                return  \"Gaining: \"+Math.round( Math.abs(((burning - consuming) / caloriesPerPound) * 7) * 1e2 ) / 1e2+\" lbs per week.\";\n            }\n            else {return \"Not loosing/gaining  weight.\"}\n           \n        }\n    }\n\n\n\n   \n    const [suid,setSuid] = useState(undefined);\n  \n\n    useEffect(() => {\n        console.log(\"userprofile mounted\");\n \n    },[])\n\n    useEffect( () => {\n        console.log(profile_picture);\n        if (profile_picture !== null) {\n            setPicture(profile_picture);\n        } else {setPicture(defaultPicture)}\n    },[profile_picture])\n\n    useEffect(() => {\n        return () => {console.log(\"userprofile unmounted\")}\n    },[])\n\n    useEffect( () => {\n        let isMounted = true;\n        getUidFromUsername(username).then(searchedUid => {\n            if(isMounted)\n            setSuid(searchedUid);\n        },[username])\n        return () => {isMounted = false};  \n    },[username])\n \n\n            if (userid === suid)\n            {\n                edit =  <Popup identity=\"userProfile\" userId ={userid} username={username} firstname={firstname} lastname={lastname} gender={gender} age={age} height={height} weight={weight} activityLevel={activityLevel} profile_picture={profile_picture} setUserInfo={setUserInfo}/>\n                edit2 = <Popup identity=\"userStats\" userId ={userid} username={username} firstname={firstname} lastname={lastname} gender={gender} age={age} height={height} weight={weight} activityLevel={activityLevel} caloriesTarget={caloriesTarget} profile_picture={profile_picture} setUserInfo={setUserInfo}/>\n           \n            }\n            \n            // console.log(selector);\n            // console.log(\"loggedIn: \"+userid);\n            // console.log(\"current: \"+suid);\n\n \n            // console.log(netLostGainCalories(calories,caloriesTarget,'weekly'));\n\n\n        // validate that username exists\n        if(username !== \"\")\n        {\n            \n            return (\n                <div className=\"user-profile-container\">\n                    <div className=\"user-profile-item d-flex flex-column\">\n                    <h2 className=\"\">PROFILE {edit}\n                \n                    \n                    \n                    \n                    \n                    </h2>\n                        <img src={picture}  alt=\"\" className=\"profilePicture mx-auto\"/>\n                        <div className=\"mx-auto text-center mt-3\">\n                        <span className=\"userName\">{username}</span>\n                        <span className=\"name\">{firstname +\" \"+lastname}</span>\n                     \n                        </div>\n                    </div>\n\n\n                    <div className=\"user-profile-item\">\n                        <h3 className=\"m-1\">JOURNAL {edit2}</h3>\n                        <div className=\"journal-items-container\">\n                            <div className=\"journal-item\"><h4>STATS</h4>\n                                <ul>\n                                    <li>gender: <span>{gender}</span></li>\n                                    <li>age: <span>{age}</span></li>\n                                    <li>height: <span>{height} cm</span></li>\n                                    <li>weight: <span>{weight} lbs</span></li>\n                                </ul>\n                            </div>\n                            <div className=\"journal-item\"><h4>PROGRESS</h4>\n                                <ul>\n                                   <li>Activity Level: <span>{activityLevel}</span></li>\n                                   <li>Daily Burn: <span>{calories} Calories</span></li>\n                                   <li>Daily Calories:<span>{caloriesTarget} Calories</span></li>\n                                    <li className=\"lossGainCalories\">{netLostGainCalories(calories,caloriesTarget,'weekly')}</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n\n\n\n                    <div className=\"user-profile-item\"><h3>WORKOUT</h3> <ul>weekly workout playlist (coming to v1.1)</ul></div>      \n                </div>  \n            );\n        } else {\n            return (<div className=\"user-profile-container\">\n            <div className=\"user-profile-item\">Profile\n            <h3>@{usernameSearched} doesnt exist..</h3>\n            \n            </div>\n            <div className=\"user-profile-item\">Journal</div>\n            <div className=\"user-profile-item\">Workout</div>\n            </div>  \n            );\n        }\n\n   \n}\n\nexport default UserProfile;\n","/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Navigation/Navigation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/DashboardContainer.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/Settings/Settings.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/DB/validation.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/Popup.js",[],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Dashboard/UserProfile/Popup/ProfileEdit/EditForm.js",["109","110","111"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/Logbook.js",["112","113","114","115","116"],"/srv/http/boskyle.com/public_html/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/FoodItem/FoodItem.js",["117"],"import React from 'react';\nimport {useState,useEffect} from 'react';\nimport {loadFromLocalStorage} from '../../LocalStorage';\nimport {FaTrashAlt} from 'react-icons/fa';\nimport moment from 'moment';\n\n\n\n\nexport const FoodItem = ({loggedItems,setLoggedItems,simpleDate,setOpenFood,setCaloriesEaten}) => {\n    \n    const fetchUserFoods = async () => {\n    let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n    let displayFoodList = `http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/displayFoodlist.php?username=${username}`;\n    \n    const foodData = await fetch(displayFoodList,{\n            method: 'GET',\n            headers: {\n                'accept': 'application/json',\n                'content-Type': 'application/json',\n            }\n        });\n\n        const items = await foodData.json();\n        setFoodItems(items);\n    }\n\n     \n    const fetchUserLoggedFoods = async () => {\n\n        const calculateCalories = (lfitems) => {\n            let total = 0;\n            lfitems.map((item) => {\n                total += item.calories;\n            })\n            return total;\n        }\n       let total = calculateCalories(loggedItems);\n       setCaloriesEaten(total);\n    }\n    \n\n\n    const [foodItems, setFoodItems] = useState([]);\n  \n    useEffect(() =>{\n        fetchUserFoods();\n    },[])\n\n\n\n    const addFoodItemToLog = (e) => {\n\n\n        let timeAdded = new Date();\n        console.log(moment(timeAdded).format('HH:mm:ss'));\n        let fullTimeAdded = (simpleDate+' '+moment(timeAdded).format('HH:mm:ss'));\n        console.log (fullTimeAdded);\n\n        console.log('add food item to log clicked');\n        const addFoodItemToDatabase = async (uname,foodname,cals,carbs,protein,fat) => {\n            let url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/logfood.php';\n\n            await fetch(url,{\n                method: 'POST',\n                headers: {\n                    'accept': 'application/json',\n                    'content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    username: uname,\n                    loggedDateSimple: simpleDate,\n                    preciseLoggedDate: fullTimeAdded,\n                    foodname: foodname,\n                    calories: cals,\n                    carbohydrates: carbs,\n                    protein: protein,\n                    fat: fat\n                })\n            })\n        }\n\n\n        let clickedFoodItem = e.currentTarget.getAttribute('food-index');\n        let tempArray2 = loggedItems;\n        // get the length of the current logged items and append to the endpoints\n        // starts at 0, but splice iteration starts at 1 so +1, and add the clicked food item\n        // add the the front (unshift)\n        tempArray2.unshift(foodItems[clickedFoodItem]);\n        console.log(foodItems[clickedFoodItem]);\n        setLoggedItems([...tempArray2]);\n\n        let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n       \n\n            addFoodItemToDatabase(\n                username,\n                foodItems[clickedFoodItem].foodname,\n                foodItems[clickedFoodItem].calories,\n                foodItems[clickedFoodItem].carbohydrates,\n                foodItems[clickedFoodItem].protein,\n                foodItems[clickedFoodItem].fat\n                )\n        \n        \n        setOpenFood(false);\n        fetchUserLoggedFoods();\n\n    }\n\n   \n    const deleteFoodItem = (e) => {\n\n        console.log('delete food item clicked');\n        e.stopPropagation();\n        const deleteFoodFromDatabase = async (uname,arrayIndex) => {\n            let url = 'http://127.0.0.1/laboratory/react_lab/react_projects/fitness-homie/src/Logbook/deletefood.php';\n            \n                await fetch(url, {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        username: uname,\n                        rowNumber: parseInt(arrayIndex)\n                    })\n                })\n\n                 \n        }\n\n        let tempArray = foodItems;\n\n        /*  get attribute 'food-index' which contains the cur .index (location of the clicked element)\n            and use it as a reference for deletion (splice)\n        */\n\n        /*\n        Use e.currentTarget.getAttribute('data-value'). The target property refers to the dom \n        element on which the event originated (which will be the svg element), whereas currentTarget refers to the \n        element to which the handler was attached.        \n        */\n\n        let curDeletedIndex = e.currentTarget.getAttribute('food-index');\n        // setIndex(e.currentTarget.getAttribute('food-index'));\n        tempArray.splice(curDeletedIndex,1)\n        // change the current array stored in state 'foodItems'\n        setFoodItems([...tempArray]);\n        let username = loadFromLocalStorage('isLogged').isLogged[1][1];\n        deleteFoodFromDatabase(username,curDeletedIndex);    \n    }\n\n \n\n    let yfDeleteStyle = {\n\n        position: 'relative',\n        float: 'right',\n    };\n\n \n    if(foodItems !== undefined)\n    return ( <>\n        {foodItems.map((foodItem,index) => (\n        <div  onClick={addFoodItemToLog}  key={index} food-index={index}>\n            <ul>\n                <li>{foodItem.foodname}<FaTrashAlt className=\"ml-1 mb-1 text-danger\" style={yfDeleteStyle} onClick={deleteFoodItem}\n                food-index={index}              \n                /></li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>cals:{foodItem.calories}</li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>c: {foodItem.carbohydrates}\n                </li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>p: {foodItem.protein} </li>\n                <li className=\"mx-1\" style={{display: 'inline-block'}}>f:{foodItem.fat}</li>\n            </ul>\n        </div>\n       \n        ))}\n    </>\n\n\n    );\n    \n    return null;\n\n  \n\n\n\n      \n// format   \n    //     <div>\n    //     <span>food name</span>\n    //     <ul>\n    //         <li>cals: /data/</li>\n    //         <li>c: /data/</li>\n    //         <li>p: /data/</li>\n    //         <li>f: /data/</li>\n    //     </ul>\n    //    </div>\n\n  \n}",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":114,"column":4,"nodeType":"124","endLine":114,"endColumn":48},{"ruleId":"125","severity":1,"message":"126","line":31,"column":9,"nodeType":"127","messageId":"128","endLine":50,"endColumn":10},{"ruleId":"122","severity":1,"message":"129","line":124,"column":3,"nodeType":"130","endLine":124,"endColumn":5,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":181,"column":9,"nodeType":"124","messageId":"134","endLine":202,"endColumn":17,"fix":"135"},{"ruleId":"132","severity":1,"message":"133","line":181,"column":9,"nodeType":"124","messageId":"134","endLine":198,"endColumn":17,"fix":"136"},{"ruleId":"137","severity":1,"message":"138","line":98,"column":32,"nodeType":"139","messageId":"140","endLine":98,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":213,"column":22,"nodeType":"143","messageId":"144","endLine":213,"endColumn":27},{"ruleId":"122","severity":1,"message":"145","line":243,"column":3,"nodeType":"130","endLine":243,"endColumn":21,"suggestions":"146"},{"ruleId":"137","severity":1,"message":"138","line":250,"column":30,"nodeType":"139","messageId":"140","endLine":250,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":287,"column":5,"nodeType":"149","messageId":"150","endLine":300,"endColumn":6},{"ruleId":"137","severity":1,"message":"138","line":33,"column":32,"nodeType":"139","messageId":"140","endLine":33,"endColumn":34},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","MemberExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'props.profile_picture'. Either include it or remove the dependency array. If 'setPictures' needs the current value of 'props.profile_picture', you can also switch to useReducer instead of useState and read 'props.profile_picture' in the reducer.","ArrayExpression",["153"],"no-whitespace-before-property","Unexpected whitespace before property then.","unexpectedWhitespace",{"range":"154","text":"155"},{"range":"156","text":"155"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-self-assign","'myCal' is assigned to itself.","Identifier","selfAssignment","React Hook useEffect has missing dependencies: 'fetchUserLoggedFoods' and 'myDate'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setToday' needs the current value of 'myDate'.",["157"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},[5558,5560],".",[5411,5413],{"desc":"160","fix":"161"},"Update the dependencies array to be: [props.profile_picture]",{"range":"162","text":"163"},"Update the dependencies array to be: [date, fetchUserLoggedFoods, myDate, preciseDate]",{"range":"164","text":"165"},[3463,3465],"[props.profile_picture]",[7876,7894],"[date, fetchUserLoggedFoods, myDate, preciseDate]"]